-- -----------------------------------------------------------------------------
-- Title: Library to support a chain of WS2812B chips by bit-banging
--
-- Author: Rob Hamerling, Copyright (c) 2014..2014, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4q2
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Sources:
--
-- Description: Library to control a chain of WS2812Bs
-- This library uses 'bit banging' to transfer data to the WS2812Bs.
-- - A PIC with Fosc of at least 32 MHz is required.
-- - The user program must specify an alias for the control pin, like:
--      alias pin_WS2812B is pin_A1       -- pin_A1 used for WS2812B control
--   and the chosen pin must be configured for digital output.
-- - The number of WS2812Bs in the chain must be specified, like:
--      const byte WS2812B_NUM = 30       -- for 30 chained WS2812Bs
-- - The user program should contain 3 byte arrays of WS2812B_NUM bytes each, e.g.:
--      var byte agreen[WS2812B_NUM]
--      var byte ared[WS2812B_NUM]
--      var byte ablue[WS2812B_NUM]
--   and call the procedure ws2812b_refresh() to pass the current color settings
--   in these arrays to the WS2812B LEDs.
-- - Procedure ws2812b_all_color() can be used to set all LEDs to the same color
--   while keeping the color settings in the array unchanged.
--
-- Dependencies: ws2812b_common.jal
--
-- Notes:
--
-- -----------------------------------------------------------------------------


-- ========= 'private' procedures =====================

-- --- transfer a '0' WS2812B bit to the chain
procedure _transfer_bit_0() is
   pin_WS2812B = TRUE
   asm nop
   asm nop
   if (target_clock > 32_000_000) then
      asm nop
      asm nop
      asm nop
   end if
   pin_WS2812B = FALSE
   if (target_clock > 32_000_000) then          -- probably 64 MHz
      asm nop
      asm nop
      asm nop
      asm nop
   end if
end procedure

-- --- transfer a '1' WS2812B bit to the chain
procedure _transfer_bit_1() is
   pin_WS2812B = TRUE
   asm nop
   asm nop
   asm nop
   asm nop
   asm nop
   if (target_clock > 32_000_000) then
      asm nop
      asm nop
      asm nop
      asm nop
   end if
   pin_WS2812B = FALSE
end procedure


-- ----------------------------------------------------------------------------
-- Title:  Transfer 3 color bytes to the WS2812B chain
-- Input:  Color intensities of green, red and blue (3 bytes)
-- Notes:  - Transfer 24 WS2812B bits
-- ----------------------------------------------------------------------------
procedure _ws2812b_write_pixel(byte in green, byte in red, byte in blue) is

   var bit  b00   at green : 7
   var bit  b01   at green : 6
   var bit  b02   at green : 5
   var bit  b03   at green : 4
   var bit  b04   at green : 3
   var bit  b05   at green : 2
   var bit  b06   at green : 1
   var bit  b07   at green : 0
   var bit  b08   at red   : 7
   var bit  b09   at red   : 6
   var bit  b10   at red   : 5
   var bit  b11   at red   : 4
   var bit  b12   at red   : 3
   var bit  b13   at red   : 2
   var bit  b14   at red   : 1
   var bit  b15   at red   : 0
   var bit  b16   at blue  : 7
   var bit  b17   at blue  : 6
   var bit  b18   at blue  : 5
   var bit  b19   at blue  : 4
   var bit  b20   at blue  : 3
   var bit  b21   at blue  : 2
   var bit  b22   at blue  : 1
   var bit  b23   at blue  : 0

   if (b00 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b01 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b02 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b03 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b04 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b05 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b06 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b07 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b08 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b09 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b10 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b11 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b12 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b13 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b14 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b15 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b16 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b17 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b18 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b19 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b20 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b21 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b22 == 0) then _transfer_bit_0() else _transfer_bit_1() end if
   if (b23 == 0) then _transfer_bit_0() else _transfer_bit_1() end if

end procedure


-- ----------------------------------------------------------------------------
-- Title: Initialize the Software ws2812b interface
-- Input: (none)
-- Notes: No initialization needed, procedure here just for uniformity
-- ----------------------------------------------------------------------------
procedure  ws2812b_sw_init() is
   -- nothing to do
end procedure


include ws2812b_common                       -- common procedures

