-- --------------------------------------------------------------------------
-- Title: Test program for lcd_hd44780_4.jal (basic / interface test)
-- Author: Eur Van Andel, Copyright (c) 2008-2014, all rights reserved.
-- Adapted-by: Rob Hamerling, Joep Suijs
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
-- 
-- Description:
-- This sample shows how to setup an LCD and writes
-- "Hello World" to the first line, using a string and the print library.
-- A counter is printed to show the running forever loop.
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
-- 
-- Sources:
-- 
-- Notes:
-- setup: an hd44780 compatible display, used in 4-bit mode.
-- 
-- --------------------------------------------------------------------------

;@jallib use chipdef
;@jallib use lcd_hd44780_4
;@jallib use led

include delay

enable_digital_io()

led_direction = output

for 4 loop                           -- blink LED 4 times to indicate startup
   LED = on
   delay_100ms(2)
   LED = off
   delay_100ms(2)
end loop

lcd_rs_direction        = output
lcd_en_direction        = output
lcd_dataport_direction  = output

include lcd_hd44780_4                -- LCD library with 4 data lines
lcd_init()                           -- initialize LCD

include print                        -- formatted output library

const byte str1[] = "Hello world!"   -- define strings

lcd_cursor_position(0,0)             -- to 1st line, 1st char
print_string(lcd, str1)              -- show hello world!

var byte counter = 0

forever loop                         -- loop forever

   counter = counter + 1             -- update counter
   lcd_cursor_position(1,0)          -- second line
   print_byte_hex(lcd, counter)      -- output in hex format
   delay_100ms(3)                    -- wait a little

   if counter == 255 then            -- counter wrap
      lcd_cursor_position(1,1)       -- 2nd line, 2nd char
      lcd = " "                      -- clear 2nd char
      lcd_write_char(" ")            -- 3rd char, equivalent to 
                                     -- the previous line
   end if

end loop
