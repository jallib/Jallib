-- ----------------------------------------------------------------------------
-- Title: Test program for random.jal
-- 
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
-- 
-- Description: Test program
-- 
-- Sources:
-- 
-- Notes: as output, this sample produces characters on a serial link. First 
--        run serial tests to make sure serial comms works okay.
-- 
-- ----------------------------------------------------------------------------

;@jallib use chipdef
;@jallib use led
led_direction = output

include delay

-- set all IO as digital
enable_digital_io()


-- setup serial (see echo.jal for more details)
;@jallib use serial
include serial_hardware
serial_hw_init()

include print

-- RANDOM --
-- The random provides a decent random function.
-- If you don't need proper random and need to save on memory
-- or cpu cycles, you could uncomment the line below. It will
-- save you 4 bytes of ram and about 80 bytes of program memory.
-- But: the random output will be of a much less quality!
;const random_downgrade = 1   -- if this constant exists (even with value 0), 
                              -- the random functions are downgraded

-- include random lib
include random

var word tmp_word
 
forever loop
   delay_100ms( 5 )
   LED = high
   delay_100ms( 5 )
   LED = low

   for 100 loop     
      -- print 100 random words
      tmp_word = random_word()  -- get 16-bit random number
      print_word_dec(serial_hw_data, tmp_word)   
   end loop
      
   print_crlf(serial_hw_data)                      -- empty line
   print_byte_dec(serial_hw_data, random_byte())   -- get 8-bit random number and output it.
   print_crlf(serial_hw_data)          
   
end loop


