-- Title: USB HID keyboard device demo
-- Author: Albert Faber, Copyright (c) 2008..2014, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
-- 
-- Description: This application emulates a keyboard USB human interface device
-- (HID), once the USB device has been conifgured and the USB HID device is recognized by
-- the host operating systems, it will generate keyboard chars if boot program pin is low
-- 
-- Sources: http://www.usb.org for USB specifications
-- 
-- Notes: compiled with following flags
-- none when using no bootloader
-- when using bootloader: -loader18 -no-fuse 
-- use -no-variable-reuse when debugging flags are
--  set due to a compiler issue
-- 
-- ------------------------------------------------------
-- ------------------------------------------------------
-- 

;@jallib use chipdef

include delay

;@jallib use serial

;@jallib use bootloader

;@jallib use led

include usb_keyboard

-- set all inputs to digital
enable_digital_io()

-- setup direction bits
led_direction = output
led2_direction = output
bootloader_program_pin_direction = input

var bit latched_switch = bootloader_program_pin

var byte key_value = USB_KEYBOARD_KEY_A

-- intialize the library
usb_keyboard_init()

-- main loop
forever loop
	-- poll the usb flush function on a regular base, in order to 
	-- serve the USB requests
	usb_keyboard_flush()
	
	-- check if USB device has been configured by the HOST
	if usb_is_configured()  then
	
		led = usb_keyboard_led_caps_lock
		led2 = usb_keyboard_led_num_lock
		
		if ( latched_switch != bootloader_program_pin ) then
		
			latched_switch = bootloader_program_pin
			
			if ( bootloader_program_pin == low )then

				-- send key code towards the USB host
				-- ush_keyboard_send_key( USB_KEYBOARD_MKEY_LEFT_SHIFT, key_value )
				ush_keyboard_send_key( 0x00, key_value )
				
				-- next key code
				key_value = key_value + 1
				
				if ( key_value > USB_KEYBOARD_KEY_Z ) then
					key_value = USB_KEYBOARD_KEY_A
				end if
				
			else
				-- depress key
				ush_keyboard_send_key( 0, 0 )
			end if
		end if
			
		-- debounce switch
		delay_1ms(50)		
	end if
end loop
