-- ----------------------------------------------------------------------------
-- Title: Test program for keyboard
-- 
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: Testing keyboard (4x4, 3x4)
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
-- 
-- Sources:
-- 
-- Notes: 
-- setup:   A keyboard 4x3 or 4x4 connected to two half ports
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_18f67j50_ms.jal
--    * test : test_keyboard.jal
--

;@jallib section chipdef
-- chip setup
include 18f67j50                   -- target PICmicro
--
-- Compiler directives
pragma target CLOCK    48_000_000  -- CPU frequency
--
-- Configuration memory settings (fuses)
pragma target OSC      INTOSC_NOCLKOUT_PLL      -- internal oscillator
                                                -- and using PLL
pragma target PLLDIV   P2          -- reduce OSC 20->4 MHz for PLL input
pragma target CPUDIV   P1          -- CPU freq. from PLL(96/2): 48 MHz
pragma target FCMEN    DISABLED    -- no fail-safeclock monitoring
pragma target IESO     DISABLED    -- no in/ext oscillator switchover
pragma target WDT      CONTROL     -- watchdog software controlled
pragma target XINST    DISABLED    -- not supported by JalV2
pragma target DEBUG    DISABLED    -- no debugging

WDTCON_SWDTEN = OFF                 -- disable watchdog

-- Note: Not specified:
--       Code protection, Boot Block Code protection, Data EEPROM protection,
--       Write protection, Configuration Memory write protection,
--       Table Read protection, Boot Block Table Read protection,
--       and maybe some other configuration bits.
--
OSCCON_SCS = 0b00                  -- select primary clock source
OSCTUNE_PLLEN = enabled            -- activate PLL module
--
WDTCON_SWDTEN = OFF                -- disable WDT
--
_usec_delay (1_000)                -- allow PLL to stabilize

include delay
enable_digital_io()

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

include print

-- keyboard - setup the two half ports
-- (rows and cols can be on separte ports - unlikely setup for dwarf-board)
alias keyscan  is porta_low      -- rows of keyboard     
alias keydrive is portb_low      -- columns of keyboard
alias keydrive_direction is portb_low_direction


include keyboard  -- check this libraray for keyboad schematics

-- -------------------------- PROGRAM START----------------------------
const byte str1[] = " - Test keyboard.jal- bytes\r\n"   -- define a string
print_string(serial_hw_data, str1)                 -- output string

var byte key

forever loop
   key = getkey()
   print_byte_dec(serial_hw_data,  key)        
   
   serial_hw_data = " "

   key = getkey_once()
   print_byte_dec(serial_hw_data,  key)
   
   print_crlf(serial_hw_data)
   delay_100ms(2)
end loop





