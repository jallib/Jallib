-- ----------------------------------------------------------------------------
-- Title: Test program for jseven (seven segment display)
-- 
-- Author: Joep Suijs, Copyright (c) 2009..2014, all rights reserved.
--  
-- Adapted-by: 
--  
-- Compiler: >=2.4q2
--  
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--  
-- Description: Testing seven segment LED display 
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- --                                                             
-- The seven segment display needs to be connected to a single port.
--     
--     AAAAAA
--    F      B
--    F      B
--    F      B
--     GGGGGG
--    E      C
--    E      C
--    E      C
--     DDDDDD   DP
--
-- If the pins on the port are not in sequence A..G, DP,
-- then, before including seven_segment.jal,  define 
-- the pin layout of the seven segment display like:
-- --
-- --
-- -- constant for the segments      gfe dcba
-- const byte seven_segment_a  = 0b_0000_0001
-- const byte seven_segment_b  = 0b_0000_0010
-- const byte seven_segment_c  = 0b_0000_0100
-- const byte seven_segment_d  = 0b_0000_1000
-- const byte seven_segment_e  = 0b_0001_0000
-- const byte seven_segment_f  = 0b_0010_0000
-- const byte seven_segment_g  = 0b_0100_0000
-- const byte seven_segment_dp = 0b_1000_0000   
-- --
--  
-- Sources:
-- 
-- Notes: 
-- setup:   A seven segment display connected to a port
--  
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_18f452_dwarf.jal
--    * test : test_seven_segment.jal
--

;@jallib section chipdef
-- chip setup
include 18f452

pragma target clock 20_000_000                  -- xtal frequency
pragma target OSC        hs
pragma target   LVP enabled                     -- allow LVP
pragma target   WDT CONTROL                     -- watchdog software controlled

WDTCON_SWDTEN = OFF                             -- disable watchdog


enable_digital_io() -- disable analog I/O (if any)

include delay 
;@jallib section jseven
-- constant for the segments      gfe dcba
const byte seven_segment_a  = 0b_0000_0001
const byte seven_segment_b  = 0b_0000_0010
const byte seven_segment_c  = 0b_0000_0100
const byte seven_segment_d  = 0b_0000_1000
const byte seven_segment_e  = 0b_0001_0000
const byte seven_segment_f  = 0b_0010_0000
const byte seven_segment_g  = 0b_0100_0000
const byte seven_segment_dp = 0b_1000_0000
include seven_segment

portd_direction = all_output                

 
var byte i = 0
forever loop
                                  
   -- set backlight off for two seconds 
   portd = seven_from_digit(i) -- display char 
   delay_1ms(500) 
   
   i = i + 1
   if (i > 17) then
      i = 0
   end if

   
end loop