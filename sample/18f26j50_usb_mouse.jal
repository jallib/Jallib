-- Title: USB HID mouse device demo
-- Author: Matthew Schinkel
-- Compiler: >=2.5r4
-- Revision: $Revision$
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This application emulates a mouse USB human interface device
-- (HID), once the USB device has been configured and the USB HID device is recognized by
-- the host operating systems, it will move the computer mouse.
--
-- Sources:
-- Albert Faber& Joep Suijs jallib usb_keyboard library
-- https://www.silabs.com/documents/public/application-notes/AN249.pdf
--
-- This file has been generated by Matt's sample generator.
--

include 18f26j50                     -- target PICmicro
--
-- This program uses the internal oscillator with PLL active.
pragma target clock 48_000_000      -- oscillator frequency
--
pragma target OSC      INTOSC_NOCLKOUT_PLL       -- internal oscillator
pragma target PLLDIV   P2                        -- 8 MHz -> 4 MHz
pragma target CPUDIV   P1                        -- Fosc divisor
pragma target WDT      CONTROL                   -- watchdog
pragma target XINST    DISABLED                  -- extended instruction set
pragma target DEBUG    DISABLED                  -- debugging
pragma target FCMEN    DISABLED                  -- clock monitoring
pragma target IESO     DISABLED                  -- int/ext osc. switch
pragma target IOL1WAY disabled   -- Mapping allowed multiple times during runtime
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program. Other programs may need more or different settings.
--
WDTCON_SWDTEN = OFF                 -- disable WDT
OSCCON_SCS = 0                      -- select primary oscillator
OSCTUNE_PLLEN = TRUE                -- use PLL
--
enable_digital_io()                 -- make all pins digital I/O
_usec_delay (100_000) -- wait for power to stablilize


include delay

-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available
--
-- include print
const PRINT_MAX_VAR_SIZE = 6
include print
include format
--
print_string(serial_data,"Jallib Sample Started...")
print_crlf(serial_data)

-- include usb_mouse library
include usb_mouse

-- intialize the library
usb_mouse_init()

-- main loop
forever loop
	-- poll the usb flush function on a regular base, in order to
	-- serve the USB requests
	usb_mouse_flush()
	
	-- check if USB device has been configured by the HOST
	if usb_is_configured()  then

      ;usb_mouse_left_click()
      ;usb_mouse_right_click()
      ;usb_mouse_wheel_click()
      ;usb_mouse_move_wheel(5)  -- scroll up   (distance 5)
      ;usb_mouse_move_wheel(-5) -- scroll down (distance 5)

      for 10 loop
          usb_mouse_move(-5,0) -- move left (10 times, distance 5)
      end loop
      for 10 loop
          usb_mouse_move(0,-5) -- move up (10 times, distance 5)
      end loop
      for 10 loop
          usb_mouse_move(5,0) -- move right (10 times, distance 5)
      end loop
      for 10 loop
          usb_mouse_move(0,5) -- move down (10 times, distance 5)
      end loop
     		
	end if
end loop