-- =======================================================================
-- Title: Test program for serial_hw_int_cts library.
--
-- Author: Rob Hamerling, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by: Albert Faber
--
-- Compiler: =2.4l
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Program to test the serial_hw_int_cts library.
--                - Echo incoming byte multiple times to check
--                  transmit buffer overflow handling.
--                - The host program may use a hardware FiFo buffer
--                  (standard in most serial PC ports) to test
--                  CTS flow control and receive buffer overflow.
--
-- This file has been generated by hand (manually maintained)
--
-- Sources:
--
-- Dependencies:  serial_hw_int_cts.jal       (RS232 library)
--
-- Notes: - With a serial port monitor data loss and the working of
--          of data flow control can be checked.
--
-- -----------------------------------------------------------------------

include 16F88                                   -- target: PIC16F88

pragma target clock 16_000_000                  -- resonator frequency

pragma  bootloader long_start                   -- for TinyBootloader

pragma target OSC        hs
pragma target WDT        disabled
pragma target PWRTE      enabled
pragma target MCLR       external
pragma target BROWNOUT   enabled
pragma target LVP        enabled 
pragma target CPD        disabled
pragma target WRT        disabled
pragma target DEBUG      disabled
pragma target CCP1MUX    pin_B0
pragma target CP         disabled
pragma target IESO       disabled
pragma target FCMEN      disabled

enable_digital_io()                           -- disable analog functions

-- ------- serial communications specifications --------------------------

const   SERIAL_XMTBUFSIZE  = 24             -- size of transmit buffer
const   SERIAL_RCVBUFSIZE  = 48             -- size of receive buffer
const   SERIAL_DELTA       = 17             -- spare rcv buffer space

const   SERIAL_HW_BAUDRATE = 57600          -- host communications

var  bit  serial_overflow_discard = FALSE   -- do not discard output!
alias serial_ctsinv is pin_B4               -- incomping data flow ctl
pin_B4_direction  = output

include serial_hw_int_cts                   -- RS232 library

serial_hw_init()

-- ------- ----------------------------------------------------------------

var   byte  x

forever loop

   if (serial_hw_read(x) == true) then      -- byte available
      for SERIAL_XMTBUFSIZE + 10 loop       -- more than fits in xmt buffer!
        x = serial_send_byte(x)             -- echo every char many times
      end loop
   end if

end loop


