-- ------------------------------------------------------
-- Title: Measure CO2 via I2C bus with T6613 sensor  and pic18f67k22
--
-- Author: Eur van Andel, eur@fiwihex.nl Copyright (c) 2014, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4q2
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Sample CO2 measurement program with Microchip PIC18f67k22.
--
-- Sources:
--
-- Notes:
--  - File creation date/time: 01 april 2014 12:07:11.
--
-- This file has been generated by hand (manually maintained)
--
-- ------------------------------------------------------
--

include 18f67k22    -- target PICmicro

-- external 20 MHz oscillator on pins OSC1 and OSC2
pragma target clock 20_000_000     -- oscillator frequency

-- configuration memory settings (fuses)
pragma target OSC       HSM         -- external oscillator
pragma target WDT       disabled    -- no watchdog
pragma target XINST     disabled    -- not supported by JalV2
pragma target DEBUG     disabled    -- no debugging
pragma target MCLR      external    -- reset externally

pragma target SOSCSEL   DIG         -- digital i/o on pin_c0 & pin_c1
pragma target RTCOSC    INTOSC      -- rtcc uses intrc

enable_digital_io()                -- make all pins digital I/O

-- i2c setup
const word _i2c_bus_speed = 1   -- * 100kHz
const bit _i2c_level = true     -- i2c levels (not SMB)

var bit  i2c_scl            is pin_c3              -- optional
var bit  i2c_scl_direction  is pin_c3_direction
var bit  i2c_sda            is pin_c4              -- optional
var bit  i2c_sda_direction  is pin_c4_direction

include i2c_reset_bus
i2c_reset_bus()
include i2c_hardware
i2c_initialize()
include co2_t6613_i2c     -- T6613 CO2 sensor via I2C

-- STERM LCD + KEYBOARD
-- single pin data connection to external handheld LCD + keyboard
var bit lcd_sterm_pin is pin_f4     -- Sterm LCD & keyboard
var bit lcd_sterm_pin_dir is pin_f4_direction
const byte LCD_ROWS = 4        --
const byte LCD_CHARS = 20
include lcd_sterm_master


include print

var word CO2 = 800
var byte loop_counter = 1

lcd_clear_screen()

forever loop

   CO2 = get_co2_ppm()

   lcd_cursor_position(0,0)   -- LINE 1
   lcd = "C" lcd = "O" lcd = "2" lcd = " "
   print_word_dec(lcd, CO2)
   lcd = " " lcd = "p" lcd = "p" lcd = "m"

   delay_1s(3)          -- CO2 sensor measures every 3 seconds

end loop
