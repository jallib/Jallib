-- Title: Sample showing how to use the keyboard and the lcd library
-- Author: Eur van Andel, eur@fiwihex.nl Copyright (c) 2008, all rights reserved.
-- Adapted-by: Albert Faber
-- Compiler: >=2.4l
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this program shows how to use the keyboard library.
-- This librar has only one function: getkey(). This function returns 0..15,
-- depending on the key pressed on a 4x4 keyboard. It returns 16 is no key is pressed.
-- the keyboard library assumes 8 pins are used, 4 rows and 4 columns
-- four are output, four input.
-- Most keyboards have around 300 ohm resistance, so nothing fries if more keys are pressed,
-- or if the direction of the pins is set wrong. Do check your keyboard!
-- The hardware used here are the Dwarf Boards: DB001, DB017 and a home-brewed keyboard
-- Check the keyboard.jal library for schematics.
--
-- This file has been generated by hand (manually maintained)
--


include 16f877a                                 -- can be any PIC, but should have 8 pins for keyboard
                                                -- and 6 pins for LCD
pragma target clock 20_000_000                  -- xtal frequency
pragma target OSC        hs
pragma target   LVP enabled 
pragma target   WDT disabled

enable_digital_io()

-- ---------------------------- LIBRARIES -----------------------------

const byte  LCD_ROWS = 4
const byte  LCD_CHARS = 20
alias LCD_RS           is pin_b5       -- LCD command/data select.
alias LCD_EN           is pin_b4       -- LCD data trigger
alias LCD_dataport     is portb_low    -- LCD data nibble
portb_direction        = all_output    -- LCD data is portb_low
include lcd_hd44780_4                  -- LCD library with 4 data lines
lcd_init()

include print
var byte dummy

alias keyscan  is portd_low          -- rows of keyboard
portd_low_direction = all_input
alias keydrive is portd_high         -- columns of keyboard
var byte keydrive_direction = dummy  -- don't let the lib control the pin direction
portd_high_direction = all_output
include keyboard                     -- check for schematics

-- -------------------------- PROGRAM START----------------------------

lcd_clear_screen()
lcd_cursor_position(0,0)
const byte str1[] = "Keyboard + LCD"
print_string(lcd, str1)

var byte key

forever loop
   lcd_cursor_position(1, 0)              -- second line
   key = getkey()
   print_byte_hex(lcd, key)
   delay_100ms(2)
end loop






