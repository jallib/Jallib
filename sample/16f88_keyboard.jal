-- ----------------------------------------------------------------------------
-- Title: Test program for keyboard
-- 
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: Testing keyboard (4x4, 3x4)
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
-- 
-- Sources:
-- 
-- Notes: 
-- setup:   A keyboard 4x3 or 4x4 connected to two half ports
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f88_js.jal
--    * test : test_keyboard.jal
--

;@jallib section chipdef
-- chip setup
include 16f88

;--
;-- This setup assumes a 20 MHz resonator or crystal
;-- is connected to pins OSC1 and OSC2.
pragma target OSC       HS             -- HS crystal or resonator
pragma target clock     20_000_000     -- oscillator frequency
pragma target WDT       disabled       -- no watchdog
pragma target LVP       enabled        -- allow low-voltage programming
pragma target CCP1MUX   pin_B3         -- ccp1 pin on B3

--
-- This setup uses the internal oscillator
;pragma target OSC       INTOSC_NOCLKOUT   -- internal oscillator
;pragma target clock     8_000_000         -- oscillator frequency
;pragma target WDT       disabled          -- no watchdog
;pragma target LVP       disabled          -- no low-voltage programming
;pragma target CCP1MUX   pin_B3            -- ccp1 pin on B3
;OSCCON_IRCF = 7                           -- set prescaler to 1 (8 MHz)


include delay
enable_digital_io()

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

include print

-- keyboard - setup the two half ports
-- (rows and cols can be on separte ports - unlikely setup for dwarf-board)
alias keyscan  is porta_low      -- rows of keyboard     
alias keydrive is portb_low      -- columns of keyboard
alias keydrive_direction is portb_low_direction


include keyboard  -- check this libraray for keyboad schematics

-- -------------------------- PROGRAM START----------------------------
const byte str1[] = " - Test keyboard.jal- bytes\r\n"   -- define a string
print_string(serial_hw_data, str1)                 -- output string

var byte key

forever loop
   key = getkey()
   print_byte_dec(serial_hw_data,  key)        
   
   serial_hw_data = " "

   key = getkey_once()
   print_byte_dec(serial_hw_data,  key)
   
   print_crlf(serial_hw_data)
   delay_100ms(2)
end loop





