-- ------------------------------------------------------
-- Title: Blink-a-led of the Microchip pic16f15274
--
-- Author: Rob Hamerling, Rob Jansen, Copyright (c) 2008..2021 all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler:2.5r5
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Simple blink-a-led program for Microchip pic16f15274
--    using the internal oscillator.
--    The LED should be flashing twice a second!
--
-- Sources:
--
-- Notes:
--  - Creation date/time: Sat May 22 09:16:28 2021
--  - This file is generated by 'blink-a-led.py' script! Do not change!
--
-- ------------------------------------------------------
--
include 16f15274                     -- target PICmicro
--
-- This program uses the internal oscillator at 4 MHz.
pragma target clock    4_000_000       -- oscillator frequency
--
pragma target OSC      OFF                       -- internal oscillator
pragma target RSTOSC   HFINTOSC_32MHZ            -- select 32 MHz
pragma target CLKOUTEN DISABLED                  -- no clock output
pragma target WDT      DISABLED                  -- watchdog
pragma target BROWNOUT DISABLED                  -- no brownout reset
pragma target LVP      ENABLED                   -- low voltage programming
pragma target MCLR     EXTERNAL                  -- external reset
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program. Other programs may need more or different settings.
--
OSCFRQ_FRQ = 0b010                  -- Fosc 32 -> 4 MHz
--
enable_digital_io()                 -- make all pins digital I/O
--
-- A low current (2 mA) led with 2.2K series resistor is recommended
-- since the chosen pin may not be able to drive an ordinary 20mA led.
--
alias  led       is pin_A0          -- alias for pin with LED
--
pin_A0_direction = OUTPUT
--
forever loop
   led = ON
   _usec_delay(100_000)
   led = OFF
   _usec_delay(400_000)
end loop
--
