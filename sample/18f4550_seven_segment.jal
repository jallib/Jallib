-- ----------------------------------------------------------------------------
-- Title: Test program for jseven (seven segment display)
-- 
-- Author: Joep Suijs, Copyright (c) 2009..2014, all rights reserved.
--  
-- Adapted-by: 
--  
-- Compiler: >=2.4q2
--  
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--  
-- Description: Testing seven segment LED display 
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- --                                                             
-- The seven segment display needs to be connected to a single port.
--     
--     AAAAAA
--    F      B
--    F      B
--    F      B
--     GGGGGG
--    E      C
--    E      C
--    E      C
--     DDDDDD   DP
--
-- If the pins on the port are not in sequence A..G, DP,
-- then, before including seven_segment.jal,  define 
-- the pin layout of the seven segment display like:
-- --
-- --
-- -- constant for the segments      gfe dcba
-- const byte seven_segment_a  = 0b_0000_0001
-- const byte seven_segment_b  = 0b_0000_0010
-- const byte seven_segment_c  = 0b_0000_0100
-- const byte seven_segment_d  = 0b_0000_1000
-- const byte seven_segment_e  = 0b_0001_0000
-- const byte seven_segment_f  = 0b_0010_0000
-- const byte seven_segment_g  = 0b_0100_0000
-- const byte seven_segment_dp = 0b_1000_0000   
-- --
--  
-- Sources:
-- 
-- Notes: 
-- setup:   A seven segment display connected to a port
--  
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_18f4550_af.jal
--    * test : test_seven_segment.jal
--

;@jallib section chipdef
-- chip setup
include 18f4550

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV        P5          -- divide by 5 - 20MHZ_INPUT
pragma target CPUDIV        P1          -- [primary oscillator src: /1][96 mhz pll src: /2]
pragma target USBDIV        P2          -- CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC           HS_PLL
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       V21         -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           CONTROL     -- watchdog software controlled
pragma target CCP2MUX       pin_C1      -- CCP2 on pin C1
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          EXTERNAL    -- master reset on RE3
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           ENABLED     -- allow low-voltage programming
pragma target XINST         DISABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CP2           DISABLED    -- code block 2 not protected
pragma target CP3           DISABLED    -- code block 3 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target CPD           DISABLED    -- eeprom code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRT2          DISABLED    -- table write block 2 not protected
pragma target WRT3          DISABLED    -- table write block 3 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTD          DISABLED    -- eeprom not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTR2         DISABLED    -- table read block 2 not protected
pragma target EBTR3         DISABLED    -- table read block 3 not protected
pragma target EBTRB         DISABLED    -- boot block not protected

WDTCON_SWDTEN = OFF                     -- disable watchdog

enable_digital_io() -- disable analog I/O (if any)

include delay 
;@jallib section jseven
-- use default pin setup from jseven.jal
include seven_segment

portd_direction = all_output                

 
var byte i = 0
forever loop
                                  
   -- set backlight off for two seconds 
   portd = seven_from_digit(i) -- display char 
   delay_1ms(500) 
   
   i = i + 1
   if (i > 17) then
      i = 0
   end if

   
end loop
