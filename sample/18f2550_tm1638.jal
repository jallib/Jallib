-- ------------------------------------------------------
-- Title: Test the TM1638 module
--
-- Author: Rob Hamerling, Copyright (c) 2014..2014, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4q2
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Simple program to test the tm1638 library.
-- Most procedures and functions are called at least once,
-- with different arguments to show the capabilities of a PCB with
-- 8 7-segment displays, 8 LEDs and 8 push button switches.
--
-- Sources:
--
-- Notes:
--
-- ------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_18f2550_js.jal
--    * test : test_tm1638.jal
--

;@jallib section chipdef
-- chip setup
include 18f2550

pragma target  clock 20_000_000
pragma target  OSC        hs
pragma target  LVP enabled                   -- allow LVP
pragma target  WDT CONTROL                   -- WDT software controlled

WDTCON_SWDTEN = OFF                          -- disable WDT


--
enable_digital_io()                 -- make all pins digital I/O
--
include delay                       -- library with delay procedures
--
-- ----------------------------------
-- setup for the tm1638 library
alias tm1638_dio            is pin_A0
alias tm1638_clk            is pin_A1
alias tm1638_stb            is pin_A2
alias tm1638_dio_direction  is pin_A0_direction

pin_A1_direction = OUTPUT
pin_A2_direction = OUTPUT

--
include tm1638                                  -- library for the TM1638
tm1638_init()                                   -- initalize the TM1638
--
var byte buttons                                -- bit pattern of the 8 push buttons
var byte leds                                   -- bit pattern of the 8 LEDs
var byte i

forever loop
   tm1638_display_mode(1, 2)                    -- set display on with low brightness
   buttons = tm1638_get_buttons()
   while buttons != 0 loop                      -- when any button pushed
      tm1638_set_leds(buttons)                  -- show pattern in LEDs
      tm1638_display_byte_bin(buttons)          -- show pattern in display
      buttons = tm1638_get_buttons()
   end loop                                     -- leaves LED of last pushed button
   tm1638_display_clear()
   tm1638_display_char("t", 0)                  -- char: offset from left
   tm1638_display_char("m", 2)
   tm1638_display_char("1", 4)
   tm1638_display_char("6", 5)
   tm1638_display_char("3", 6)
   tm1638_display_char("8", 7)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_string("--1638--", 0)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_string("--1638--", 2)         -- string: offset from left, shows: --1638
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_digit(1, 1, FALSE)            -- single digit: offset from left
   delay_100ms(3)
   tm1638_display_digit(6, 3, TRUE)
   delay_100ms(3)
   tm1638_display_digit(3, 5, FALSE)
   delay_100ms(3)
   tm1638_display_digit(8, 7, FALSE)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_clear()
   tm1638_display_dword_hex(0x79abcDEF, 0)                     -- numerics: offset from right
   for 7 using i loop
      tm1638_display_mode(1, i)
      delay_100ms(5)
   end loop
   tm1638_display_dword_hex(0x88888888, FALSE)                 -- all segments on (no dp)
   delay_1s(1)
   tm1638_display_mode(0, 7)                                   -- display off ('high' density!)
   delay_1s(1)
   tm1638_display_mode(1, 2)                                   -- display on, low density
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_dword_dec(1234567, 0, 0, TRUE)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_dword_dec(99999999, 0b_1000_0001, 0, TRUE)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_sdword_dec(-654321, 0b_0001_1000, 0, TRUE);
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_sdword_dec(-1, 0b_0000_0000, 0, FALSE);
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_sdword_dec(-12345678, 0, 0, 0)               -- doesn't fit, shows: -2345678
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0000_0000, 0, true)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0000_1000, 1, true)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0100_0010, 2, true)
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0000_0000, 3, false)      -- left aligned
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0000_0000, 4, false)      -- shows: 2345
   delay_1s(2)
   tm1638_display_clear()
   tm1638_display_word_dec(12345, 0b_0000_0000, 5, false)      -- shows: 345
   delay_1s(2)
   tm1638_set_leds(0x5A)                                       -- shows: .*.**.*. of LEDs
   tm1638_display_byte_bin(0x5A)                               -- shows: 01011010 in display
   delay_1s(2)
end loop
--