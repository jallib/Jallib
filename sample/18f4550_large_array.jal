-- Title: Test program for Large Array 
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009..2020, all rights reserved.
-- Adapted-by: Joep Suijs, Rob Jansen
-- Compiler: >=2.5r4
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This is an example large array for creating an array that
--              take up more then 256 bytes memory. 
--
-- Sources:
--
-- Notes: Uses the latest version of the large array library.
--        See large_array_4.jal on how to use the library
--
-- Important: There is no range check on the index in the array.
--

include 18f4550

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000

-- fuses
pragma target PLLDIV        P5          -- divide by 5 - 20MHZ_INPUT
pragma target CPUDIV        P1          -- [primary oscillator src: /1][96 mhz pll src: /2]
pragma target USBDIV        P2          -- CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC           HS_PLL
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       V21         -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           CONTROL     -- watchdog software controlled
pragma target CCP2MUX       pin_C1      -- CCP2 on pin C1
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          EXTERNAL    -- master reset on RE3
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           DISABLED    -- no low-voltage programming
pragma target XINST         DISABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CP2           DISABLED    -- code block 2 not protected
pragma target CP3           DISABLED    -- code block 3 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target CPD           DISABLED    -- eeprom code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRT2          DISABLED    -- table write block 2 not protected
pragma target WRT3          DISABLED    -- table write block 3 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTD          DISABLED    -- eeprom not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTR2         DISABLED    -- table read block 2 not protected
pragma target EBTR3         DISABLED    -- table read block 3 not protected
pragma target EBTRB         DISABLED    -- boot block not protected

WDTCON_SWDTEN = OFF                     -- disable watchdog
-- setup uart for communication
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()
alias serial is serial_hw_data
include print

-- Setup the large array
const LARGE_ARRAY_4_SIZE = 400         -- choose number of array variables
const LARGE_ARRAY_4_VARIABLE_SIZE = 4  -- choose size of variables (byte*4)
include large_array_4                  -- include the array library
alias test is large_array_4            -- rename/alias the array to test

_usec_delay(100_000)
-- send start via serial port
serial_hw_write("S")
serial_hw_write("T")
serial_hw_write("A")
serial_hw_write("R")
serial_hw_write("T")

_usec_delay(1_000_000) -- 1 sec delay

-- store some values
test[50] = 0x1111_1111
test[51] = 0x2222_2222
test[26] = 0x3333_3333
test[27] = 0x4444_4444
test[00] = 0x5555_5555                      -- This is the first byte of the array. 
test[57] = 0x6666_6666
test[49] = 0x7777_7777
test[LARGE_ARRAY_4_SIZE - 1] = 0x8888_8888  -- This is the last byte of the array. 

-- read some values
print_dword_hex(serial, test[50])
print_dword_hex(serial, test[51])
print_dword_hex(serial, test[26])
print_dword_hex(serial, test[27])
print_dword_hex(serial, test[00])
print_dword_hex(serial, test[57])
print_dword_hex(serial, test[49])
print_dword_hex(serial, test[LARGE_ARRAY_4_SIZE - 1])

_usec_delay(1_000_000) -- 1 sec delay

-- send end via serial port
serial_hw_write ("E")
serial_hw_write ("N")
serial_hw_write ("D")
