-- ------------------------------------------------------
-- Title: Test a 7-segment module with TM1640 chip
--
-- Author: Rob Hamerling, Copyright (c) 2014..2014, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4q2
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Simple program to test the tm1640 library.
-- Most procedures and functions are called at least once,
-- with different arguments to show the capabilities of
-- a ready-built PCB with 16 7-segment displays.
--
-- Sources:
--
-- Notes:
--
-- ------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f723_af.jal
--    * test : test_tm1640.jal
--

;@jallib section chipdef

-- device include
include 16f723

-- Internal osc, running at 16 MHz
pragma target clock 16_000_000


-- fuses
pragma target OSC INTOSC_NOCLKOUT
pragma target WDT DISABLED
pragma target PWRTE DISABLED
pragma target MCLR INTERNAL
pragma target CP DISABLED
pragma target BROWNOUT DISABLED
pragma target VOLTAGE V19
pragma target PLLEN ENABLED
pragma target VCAPEN pin_A0


enable_digital_io()                 -- make all pins digital I/O
--
include delay                       -- library with delay procedures
--
-- ----------------------------------
-- setup for the tm1640 library
alias tm1640_din  is pin_A0
alias tm1640_clk  is pin_A1

pin_A0_direction = OUTPUT
pin_A1_direction = OUTPUT
--
include tm1640                      -- library for the TM1640
tm1640_init()                       -- initalize the TM1640
--
var byte i

forever loop

   tm1640_display_clear()
   tm1640_display_mode(1, TM1640_DISPLAY_PWM10)  -- set display on with medium brightness

   tm1640_display_char("t", 1)                  -- char: offset from left
   tm1640_display_char("m", 2)
   tm1640_display_char("1", 3)
   tm1640_display_char("6", 4)
   tm1640_display_char("4", 5)
   tm1640_display_char("0", 6)
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_digit(1, 1, FALSE)            -- single digit: offset from left
   delay_100ms(3)
   tm1640_display_digit(6, 3, TRUE)
   delay_100ms(3)
   tm1640_display_digit(4, 5, FALSE)
   delay_100ms(3)
   tm1640_display_digit(0, 7, FALSE)
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_string("0123456789AB", 0)
   delay_1s(2)
   tm1640_display_string("abcdefgh", 0)
   delay_1s(2)
   tm1640_display_string("ABCDEFGH", 8)
   delay_1s(2)
   tm1640_display_dword_hex(0x88888888, FALSE)                 -- all segments on (no dp)
   delay_1s(2)
   tm1640_display_dword_dec(0xFFFFFFFF, 0, 0, TRUE)
   delay_1s(2)
   for 7 using i loop
      tm1640_display_mode(1, i)
      delay_100ms(8)
   end loop
   tm1640_display_mode(1, TM1640_DISPLAY_PWM10)                -- display on, medium density
   tm1640_display_clear()
   tm1640_display_dword_dec(1234567, 0, 0, TRUE)
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_dword_dec(99999999, 0b_1100_1010_0101_0011, 0, TRUE)
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_sdword_dec(-654321, 0b_0010_1010, 0, TRUE);
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_sdword_dec(-1, 0b_0000_1010, 0, FALSE);
   delay_1s(2)
   tm1640_display_clear()
   tm1640_display_sdword_dec(-12345678, 0, 0, 0)               -- doesn't fit, shows: -2345678
   delay_1s(2)
   for 5 using i loop
      tm1640_display_clear()
      tm1640_display_word_dec(12345, 1<<i, i, true)
      delay_1s(2)
   end loop
   delay_1s(2)
   tm1640_display_byte_bin(0x5A, 0)                            -- shows: 01011010 in display
   delay_1s(2)
   tm1640_display_word_bin(0x9669)
   delay_1s(2)
end loop
--
