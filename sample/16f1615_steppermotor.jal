-- --------------------------------------------------------------
-- Title: Example of using the stepper library 
--
-- Author: Rob Hamerling, Copyright (c) 2016, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4q5
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Simple stepper motor example with 16f1615
--
-- Sources:
--
-- Notes:
-- 
-- ----------------------------------------------------------

include 16f1615                              

-- internal oscillator at 8 MHz (with 4xPLL -> 32 MHz)

pragma target clock     32_000_000           -- Fosc

pragma target OSC       INTOSC_NOCLKOUT
pragma target WDT       DISABLED             -- no watchdog
pragma target PWRTE     ENABLED
pragma target MCLR      EXTERNAL
pragma target BROWNOUT  DISABLED 
pragma target CLKOUTEN  DISABLED             -- no clock out
pragma target PPS1WAY   DISABLED
pragma target PLLEN     DISABLED             -- PLL software controlled
pragma target LVP       ENABLED              -- allow Low Voltage Programming

OSCCON_IRCF   = 0b1110                       -- 8 MHz 
OSCCON_SCS    = 0b00                         -- clock determined by fuses
OSCCON_SPLLEN = TRUE                         -- PLL (8 -> 32 MHz)

include delay

if !defined(TMR3) then                       -- omision in device files
   var volatile word TMR3 at TMR3L
end if

alias  stepper_led is pin_A0                 -- led
pin_A0_direction    = OUTPUT 

alias  stepper_coils  is  portC_low          -- stepper control 
portC_low_direction  = ALL_OUTPUT  

const word stepper_steps_per_rotation = 48   -- steps per full rotation

include steppermotor                         -- stepper motor library

-- ------- main program --------

forever loop

   stepper_led = ON
   stepper_cw = TRUE                         -- clockwise
   stepper_fullstep = TRUE                   -- full steps
   stepper_accel(100,1500)                   -- acceleration rate 15 RPM/sec
   stepper_decel(100,1500)                   -- deceleration rate 15 RPM/sec
   stepper_led = ON
   stepper_run(600)                          -- 60 RPM 
   delay_1s(6) 
  
   stepper_led = OFF 
   stepper_stop()                            -- decellerate to 0 RPM  
   while (stepper_actual_rpm() != 0) loop
      -- nop
   end loop      
   
   stepper_led = ON
   stepper_cw = FALSE                        -- reverse
   stepper_fullstep = FALSE                  -- half steps
   stepper_accel(100,1000)                   -- acceleration rate 10 RPM/sec
   stepper_decel(100,1000)                   -- deceleration rate 10 RPM/sec
   stepper_led = ON
   stepper_run(300)                          -- 30 RPM
   delay_1s(6) 
   
   stepper_led = OFF
   stepper_stop()                            -- decellerate to 0 RPM
   while (stepper_actual_rpm() != 0) loop
      -- nop
   end loop      
         
end loop
 



