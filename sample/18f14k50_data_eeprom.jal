-- -----------------------------------------------------------------------------
-- Title: Sample data EEPROM write and read for the Microchip PIC18F14K50.
-- 
-- Author: Rob Hamerling, Copyright (c) 2008..2019, all rights reserved.
-- 
-- Adapted-by: Albert Faber, Joep Suijs, Rob Jansen
-- 
-- Compiler: 2.5r3
-- 
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--  
-- Description:
-- Sample data EEPROM write and read for the Microchip PIC18F14K50. During
-- EEPROM writing and reading the LED is blinking. After verifying all 256
-- EEPROM addresses successfully the LED should stay on. If the data read is 
-- not the same as the data written the LED will be off.
--  
-- Sources:
-- 
-- Notes: This file is a modification of the original 18f14k50_data_eeprom.jal file 
--        and adapted to better indicate if the EEPROM write and read cyles 
--        were successful using the connected LED.
--

-- chip setup
include 18f14k50

-- Even though the external crystal is 12 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz.
pragma target clock       48_000_000

-- fuses
pragma target CPUDIV        P1          -- NO_CPU_SYSTEM_CLOCK_DIVIDE
pragma target USBDIV        P1          -- USB_CLOCK_COMES_DIRECTLY_FROM_THE_OSC1_OSC2_OSCILLATOR_BLOCK_NO_DIVIDE
pragma target OSC           HS
pragma target PLLEN         ENABLED     -- OSCILLATOR_MULTIPLIED_BY_4
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target VOLTAGE       V30         -- brown out voltage
pragma target WDT           CONTROL     -- watchdog software controlled
pragma target WDTPS         P32K        -- watch dog scaler setting
pragma target MCLR          EXTERNAL    -- external reset
pragma target LVP           ENABLED     -- allow low-voltage programming
pragma target XINST         DISABLED    -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTRB         DISABLED    -- boot block not protected
pragma target HFOFST        ENABLED     -- THE_SYSTEM_CLOCK_IS_HELD_OFF_UNTIL_THE_HFINTOSC_IS_STABLE

WDTCON_SWDTEN = OFF                     -- WDT off

pragma eedata 129,130,131,132           -- initial contents

enable_digital_io()                     -- disable analog modules

include pic_data_eeprom
-- LED IO definition
alias led             is pin_c0
alias led_direction   is pin_c0_direction
led_direction = output

var byte i,j                         
var bit led_value = ON
var bit all_ok = TRUE

led = OFF
i = 0

forever loop
   _usec_delay(100_000)          

   -- As long as the led blinks all written data equals the data is read back.
   -- In case of a difference in data the led will be turned off. After a 
   -- succesfull write and read cycle of 256 bytes the LED stays on.
   if all_ok then
      led_value = !led_value      -- toggle the led
      data_eeprom_write(i,i)      -- write value
      j = data_eeprom(i)          -- read back
      if (j != i) then
         all_ok = FALSE
         led_value = OFF
      end if 
   end if
   i = i + 1

   led = led_value

   while (i == 0) loop            -- The end, led should be on if all OK.    
      if all_ok then
         led = ON
      else
         led = OFF
      end if
   end loop          
 
end loop

