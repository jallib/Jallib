-- ------------------------------------------------------
-- Title: Test program for serial_hardware2.jal, using 2nd ESUART module
--
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
--
-- Adapted-by: Sebastien Lelong
--
-- Compiler: >=2.4q2
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program for serial hardware lib driving the
-- 2nd serial module, EUSART2. 18F25K22 carries TX2 on pin_B6 and 
-- RX2 on pin_B7.
--
-- This file has been generated by hand (manually maintained)
--
-- Sources:
--
--    setup: a serial connection to a terminal
--

-- Assuming PIC is running internal oscillator
include 18f25k22                    -- target PICmicro
pragma target clock 16_000_000     -- oscillator frequency
-- configuration memory settings (fuses)
pragma target OSC      INTOSC_NOCLKOUT -- internal osc
OSCCON_IRCF = 0b111
pragma target WDT      disabled     -- no watchdog
pragma target DEBUG    disabled     -- no debugging
pragma target LVP      enabled      -- allow Low Voltage Programming
pragma target MCLR external        -- reset externally

include delay

-- set all IO as digital
enable_digital_io()

-- ok, now setup serial
const serial_hw2_baudrate = 115_200
include serial_hardware2
serial_hw2_init()

include print                       -- output library

const byte str1[] = "Hello serial world"   -- define a string
print_string(serial_hw2_data, str1)  -- output string to serial

-- inform user PIC is ready !
serial_hw2_write("!")

-- let's build our loop
var byte char	-- will store received char
var word counter = 10
forever loop
	if (serial_hw2_read(char))	then
		serial_hw2_write(char)	-- that's the echo...
	end if
	
	counter = counter - 1;
	if (counter == 0) then
	   counter = 50000
      serial_hw2_data = "."	   
   end if
end loop

