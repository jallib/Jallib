-- Title: GLCD SSD1306 demo sample showing text (fonts) and pixel based graphics.
--
-- Author: Rob Jansen, Copyright (c) 2020..2020, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.5r4 
--
-- Revision: $Revision$
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Demo program showing how to use GLCD SSD1306. It demonstrates
--              all features of the glcd_ssd1360.jal library. This sample shows 
--              both the text (font usage) features as well as the graphics 
--              features drawing a line, a boxe, a circle and an ellipse.
--

include 16f18857
pragma target clock 20_000_000      -- oscillator frequency
pragma target OSC      HS           -- crystal or resonator
pragma target RSTOSC   EXT1X        -- power-up clock select: OSC
pragma target CLKOUTEN DISABLED     -- no clock output
pragma target WDT      DISABLED     -- watchdog
pragma target BROWNOUT DISABLED     -- no brownout reset
pragma target FCMEN    DISABLED     -- no clock monitoring
pragma target CSWEN    ENABLED      -- allow writing OSCCON1 NOSC and NDIV
pragma target LVP      ENABLED      -- use low voltage programming
pragma target MCLR     EXTERNAL     -- external reset 

enable_digital_io()

-- Define the pins. In this case we define all IIC/SPI pins but if SPI is not
-- used then they can be left out.
-- Pins used both for IIC or SPI.
alias ssd1306_sck is pin_C3 -- This is pin DO on the module (SCK of PIC).
alias ssd1306_sck_direction is pin_C3_direction -- Pin 14 of 28 pin DIP.
alias ssd1306_sdo is pin_C4 -- This is pin D1 on the module (SDA of PIC).
alias ssd1306_sdo_direction is pin_C4_direction -- Pin 15 of 28 pin DIP. 
-- Extra needed for SPI.
alias ssd1306_csn is pin_C2  -- This is pin CS on the module. 
alias ssd1306_csn_direction is pin_C2_direction  -- Pin 13 of 28 pin DIP. 
alias ssd1306_dc is pin_C1  -- This is pin DC on the module. 
alias ssd1306_dc_direction is pin_C1_direction -- Pin 12 of 28 pin DIP. 
alias ssd1306_rst is pin_C0  -- This is pin RES on the module.
alias ssd1306_rst_direction is pin_C0_direction  -- Pin 11 of 28 pin DIP. 

-- Define how to use the library, we can use IIC or SPI and for both hardware
-- support as well as a software implementation can be selected (see library).
-- The default is control via IIC, in that case nothing needs to be defined.
-- Here we want to control the module with the SPI interface.
const SSD1306_SPI_CONTROL = TRUE

-- If you do not want to use the SPI hardware of the PIC, you can select a
-- software implementation.
-- const bit SSD1306_SOFTWARE_SPI = TRUE

-- The default display resolution is 128 x 64. When using 128 x 32 define:
-- const SSD1306_Y_32_PIXELS = TRUE

-- For PICs that do not have much data memory but still want to use the display
-- a text only mode can be selected. Note that the graphics functions must
-- then be removed from this sample programs since they are then not supported
-- const SSD1306_TEXT_ONLY = TRUE

-- Set the pinning for the hardware pins of IIC or SPI. This is default but 
-- still needed for this chip.
include pps
pps_control_lock(FALSE)                
RC4PPS = PPS_SDA1  -- SDA re-assigned to C4  (default)             
RC3PPS = PPS_SCK1  -- SCK re-assigned to C3  (default)            
pps_control_lock(TRUE)                 
 
include delay
include print

-- Font libraries
include glcd_5x7_font
include glcd_6x8_font
include glcd_font
glcd_font_use(FONT_5X7)

-- Include and initialize the GLCD lib. This will also initialize the IIC or
-- SPI interface.
include glcd_ssd1306
ssd1306_init()

var byte x
var bit use_font_1 = false

-- First write the demo text.
ssd1306_clear_screen()
glcd_font_use(FONT_6X8)
ssd1306_goto(22,0)
print_string(glcd,"JAL SSD1306")
ssd1306_goto(20,1)
print_string(glcd,"Library Demo")
ssd1306_goto(30,4)
print_string(glcd,"2020-09-06")
ssd1306_goto(15,5)
print_string(glcd,"Text & Graphics")
ssd1306_goto(32,6)
print_string(glcd,"Font 6x8")
delay_1s(3)

-- Gotoxy test. Show all corners.
glcd_font_use(FONT_6X8)
-- Top left.
ssd1306_goto(0,0)
glcd = "8"
-- Top utmost right for this font size.
ssd1306_goto(122,0) -- Font is 6 wide so places it to the most right position.
glcd = "8"          -- at 122 .. 127.
-- Bottom left.
ssd1306_goto(0,7)
glcd = "8"
-- Bottom utmost right for this font size.
ssd1306_goto(122,7) -- Font is 6 wide so places it to the most right position.       
glcd = "8"          -- at 122 .. 127.
delay_1s(3)


forever loop
 
   ssd1306_clear_screen()
   ssd1306_goto(0,0)
   
   -- switch fonts and inform user
   use_font_1 = !use_font_1
   if use_font_1 then
      glcd_font_use(FONT_5X7)
      print_string(glcd,"Font 5*7          ")
      delay_1s(1)
   else
      glcd_font_use(FONT_6X8)
      print_string(glcd,"Font 6*8          ")
      delay_1s(1)
   end if

   ssd1306_goto(0,3)
   -- we'll print numbers starting with "0" in inverted format.
   x = 48
   -- numbers are printed inverted
   glcd_background_color = GLCD_BLACK
   while x <= 57 loop
      glcd = x
      delay_100ms(1)
      x = x + 1
   end loop

   ssd1306_goto(0,4)
   -- now print capital letters and small letters in normal format.
   x = 65  -- this is "A"
   -- not inverted (ie. normal)
   glcd_background_color = GLCD_WHITE
   while x <= 122 loop
      glcd = x
      delay_100ms(1)
      x = x + 1
   end loop
   delay_1s(3)

   ssd1306_goto(0,0)
   print_string(glcd,"Brightness Demo")

   -- Play with the contrast.
   for 255 using x loop
      ssd1306_set_contrast(x)
      _usec_delay(20_000)
   end loop

   -- Show some display features.
   ssd1306_goto(0,0)
   print_string(glcd,"All Segments On   ")
   delay_1s(3)
   ssd1306_display_all_on()
   delay_1s(3)
   ssd1306_goto(0,0)
   print_string(glcd,"Resume Display    ")
   ssd1306_display_resume()
   delay_1s(3)
   ssd1306_goto(0,0)
   print_string(glcd,"Inverse Display   ")
   ssd1306_display_inverse()
   delay_1s(3)
   ssd1306_goto(0,0)
   print_string(glcd,"Normal Display    ")
   ssd1306_display_normal()
   delay_1s(3)
   ssd1306_goto(0,0)
   print_string(glcd,"Display Off and On")
   delay_1s(2)
   ssd1306_display_off()
   delay_1s(2)
   ssd1306_display_on()
   delay_1s(2)
  
   -- Show some display scroll features.
   ssd1306_goto(0,0)
   print_string(glcd,"Scroll Right...   ")
   ssd1306_goto(0,1)
   print_string(glcd,"...and Left       ")
   delay_1s(2)
   ssd1306_start_scroll_right(0x00, 0x07)
   delay_1s(8)
   ssd1306_stop_scroll()
   delay_1s(1)
   ssd1306_start_scroll_left(0x00, 0x07)
   delay_1s(8)
   ssd1306_stop_scroll()
   delay_1s(2)

   -- Custom made vertical scroll. There is no automatic vertical scroll
   -- feature supported by the SSD1306 but we can use the set start line 
   -- function to create one.
   ssd1306_goto(0,0)
   print_string(glcd,"Scroll Up ...     ")
   ssd1306_goto(0,1)
   print_string(glcd,"...and Down       ")
   delay_1s(2)
   -- Up.
   for SSD1306_MAX_Y_PIXELS using x loop
     ssd1306_set_start_line(x)
     delay_1ms(50)
   end loop
   -- Down.
   delay_1s(3)
   x = SSD1306_MAX_Y_PIXELS -1 
   for SSD1306_MAX_Y_PIXELS loop
      ssd1306_set_start_line(x)
      x = x - 1
      delay_1ms(50)
   end loop
   delay_1s(2)
   -- Back to normal.
   ssd1306_set_start_line(0) 

   ssd1306_goto(0,0)
   print_string(glcd,"Scroll Diagonal...")
   ssd1306_goto(0,1)
   print_string(glcd,"...Right and Left ")
   delay_1s(2)
   ssd1306_start_scroll_diagonal_right(0x00, 0x07)
   delay_1s(5)
   ssd1306_stop_scroll()
   delay_1s(1)
   ssd1306_start_scroll_diagonal_left(0x00, 0x07)
   delay_1s(5)
   ssd1306_stop_scroll()
   delay_1s(3)

   -- Do some graphics stuff.
   ssd1306_clear_screen()
   ssd1306_goto(0,0)
   print_string(glcd,"Draw a Line       ")
   delay_1s(2)
   glcd_line(10,20,60,40)
   ssd1306_update_display()
   delay_1s(2)

   ssd1306_clear_screen()
   ssd1306_goto(0,0)
   print_string(glcd,"Draw a Box        ")
   delay_1s(2)
   glcd_box(20,20,80,60)
   ssd1306_update_display()
   delay_1s(2)

   ssd1306_clear_screen()
   ssd1306_goto(0,0)
   print_string(glcd,"Draw a Circle     ")
   delay_1s(2)
   glcd_circle(40,40,20)
   ssd1306_update_display()
   delay_1s(2)

   ssd1306_clear_screen()
   ssd1306_goto(0,0)
   print_string(glcd,"Draw an Ellipse   ")
   delay_1s(2)
   glcd_ellipse(40,30,30,10)
   ssd1306_update_display()
   delay_1s(2)

end loop


