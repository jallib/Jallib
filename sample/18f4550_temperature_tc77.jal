-- Title: Test file for TC77 temperature sample
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2011, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: 2.4q2
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This sample reads temperature from TC77 through SPI.
--
-- Sources:
-- TC77 temperature sensor sample by Eur van Andel
-- http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en010750
--
-- Notes:
-- This is a complete re-write of the orignal jallib TC77 library
-- written by Eur van Andel.
--
-- Improvements:
-- Uses pesudo variables
-- tiny bit less code/ram usage.
-- cs line controlled by library (optional)
-- no ASM
-- Compatible with the jallib SPI library (hardware or software)
-- Less code used when using multiple devices since SPI code is shared.
--   
-- This file has been generated by jallib.py from:
--    * board: board_18f4550_af.jal
--    * test : test_temperature_tc77.jal
--

;@jallib section chipdef
-- chip setup
include 18f4550

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV        P5          -- divide by 5 - 20MHZ_INPUT
pragma target CPUDIV        P1          -- [primary oscillator src: /1][96 mhz pll src: /2]
pragma target USBDIV        P2          -- CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC           HS_PLL
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       V21         -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           CONTROL     -- watchdog software controlled
pragma target CCP2MUX       pin_C1      -- CCP2 on pin C1
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          EXTERNAL    -- master reset on RE3
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           ENABLED     -- allow low-voltage programming
pragma target XINST         DISABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CP2           DISABLED    -- code block 2 not protected
pragma target CP3           DISABLED    -- code block 3 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target CPD           DISABLED    -- eeprom code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRT2          DISABLED    -- table write block 2 not protected
pragma target WRT3          DISABLED    -- table write block 3 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTD          DISABLED    -- eeprom not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTR2         DISABLED    -- table read block 2 not protected
pragma target EBTR3         DISABLED    -- table read block 3 not protected
pragma target EBTRB         DISABLED    -- boot block not protected

WDTCON_SWDTEN = OFF                     -- disable watchdog
;@jallib section serial
const serial_hw_baudrate = 115_200


enable_digital_io() -- disable all analog pins if any
_usec_delay (100_000) -- wait for power to stablilize

include print

include format

include spi_master_hw         -- includes the spi library
-- define spi inputs/outputs
pin_sdi_direction = input    -- spi input
pin_sdo_direction = output   -- spi output
pin_sck_direction = output   -- spi clock
--
spi_init(SPI_MODE_11,SPI_RATE_FOSC_4) -- init spi, choose mode and speed
alias spi_master is spi_master_hw
alias spi_master_exchange is spi_master_hw_exchange


-- setup uart for communication
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available


-- Setup TC77 temp sensor
alias tc77_cs           is pin_ss
alias tc77_cs_direction is pin_ss_direction
tc77_cs = high
tc77_cs_direction = output
--
const TC77_CS_IN_LIB = TRUE  -- chip select line controlled by library
alias tc77_force_spi_mode is spi_master_hw_set_mode_11 -- always set spi mode to 0,0
include temperature_tc77

-- main program
forever loop
   print_crlf(serial_hw_data)
   print_sbyte_dec(serial_data, tc77_celsius_sbyte)
   serial_data =" "

   print_crlf(serial_hw_data)
   format_sword_dec(serial_data, tc77_celsius_sword, 6, 2)
   serial_data =" "

   print_crlf(serial_hw_data)
   format_sdword_dec(serial_data, tc77_celsius_sdword, 8, 4)
   serial_data = " "

   _usec_delay(250_000)
end loop
