-- ----------------------------------------------------------------------------
-- Title: Test program for i2c_software.jal
-- 
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
--  
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--  
-- Description: LCD DSM0822A star burst display test program
-- 
-- Sources:
-- 
-- Notes: 
--    setup: a dsm0822a display, connected via i2c
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f648a_js.jal
--    * test : test_lcd_dsm0822a.jal
--

;@jallib section chipdef
-- chip setup
include 16f648a

--
-- This program assumes a 20 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
pragma target OSC HS               -- HS crystal or resonator
pragma target clock 20_000_000     -- oscillator frequency
pragma target WDT  disabled
pragma target LVP  enabled 

;@jallib section i2c
-- I2C io definition
alias i2c_scl            is pin_b4
alias i2c_scl_direction  is pin_b4_direction
alias i2c_sda            is pin_b3
alias i2c_sda_direction  is pin_b3_direction

-- generic setup (see releated examples for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()
include print
include delay

-- i2c setup
const word _i2c_bus_speed = 1 ; * 100kHz
const bit _i2c_level = true   ; i2c levels (not SMB)

include i2c_software
;include i2c_hardware

i2c_initialize()

-- inculde dsm0822a libraray & init                                                                                                                                                    const byte I2C_port = 0
include lcd_dsm0822a
dsm_init()

const byte str1[] = "\nStar ";
print_string(dsm_data, str1);  -- print 'Star' ('\n' sets cursor at home position)

dsm_data = ASCII_CR  -- set cursor back at home position

var byte ch = " "

forever loop

   -- 'walk' the strength indicator
   dsm_clear_indicator(DSM_I1 | DSM_I2 | DSM_I3)   -- clear all strength indicators
   dsm_set_indicator(DSM_I1)     -- set left strength indicators
   delay_100ms(3)

   dsm_clear_indicator(DSM_I1)   -- clear the left indicator   
   dsm_set_indicator(DSM_I2)     -- set the middle one
   delay_100ms(3)

   dsm_clear_indicator(DSM_I2)   -- clear the middle indicator   
   dsm_set_indicator(DSM_I3)     -- set the rigth one
   delay_100ms(3)

   dsm_clear_indicator(DSM_I3)   -- clear the right indicator   
   delay_100ms(3)

   -- put the next character on screen
   dsm_data = ch        ; put char on display
   ch = ch + 1          ; next char
   if (ch > "_") then   ; if beyond last char
      ch = " "          ; then start over
   end if   

end loop
