-- -----------------------------------------------------------------------------
-- Title: Serial hardware test program for USART 3.
-- Author: Rob Jansen, Copyright (c) 2021..2021 all rights reserved.
-- Adapted-by:
--
-- Compiler: 2.5r5
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: USART test program for the Microchip PIC18F16Q40. The program
--              will write a sequence of '.' to the serial port and will echo 
--              any character that is received on the serial port.  
--
-- Sources: Based on the serial hardware sample program by Joep Suijs.
--
-- Notes:
--
-- -----------------------------------------------------------------------------
--
include 18f16q40                -- target PICmicro

-- This program assumes that a 20 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
pragma target clock 20_000_000      -- oscillator frequency

pragma target OSC      HS       -- crystal or resonator
pragma target CLKOUTEN DISABLED -- no clock output
pragma target WDT      DISABLED -- watchdog
pragma target XINST    DISABLED -- do not use extended instructionset
pragma target BROWNOUT DISABLED -- no brownout reset
pragma target FCMEN    DISABLED -- no clock monitoring
pragma target CSWEN    ENABLED  -- allow writing OSCCON1 NOSC and NDIV
pragma target LVP      ENABLED  -- low voltage programming
pragma target MCLR     EXTERNAL -- external reset
pragma target MVECEN   DISABLED -- Do no use multi vectored interrupts

enable_digital_io()             -- make all pins digital I/O

-- PPS is needed to set the USART pins correctly. 
include pps
pps_control_lock(FALSE)
-- Change following lines to match your pcb layout. 
RC4PPS  = PPS_TX3 -- TX3 assigned to C4 
U3RXPPS = PPS_RC3 -- RX3 assigned to C3
pps_control_lock(TRUE)

-- Serial interface definitions.
const serial_hw3_baudrate = 115200
alias pin_tx3_direction	is pin_C4_direction
alias pin_rx3_direction	is pin_C3_direction
include serial_hardware3
serial_hw3_init()

include print
print_string(serial_hw3_data, "Hello serial hardware 3 world!")  

var byte char	
var word counter = 10

forever loop

   -- if there is a char, echo it back
   if serial_hw3_read(char) then
      serial_hw3_write(char)  
   end if

   -- code block below prints a dot, every now and then, to signal
   -- the pic is alive
   counter = counter - 1     
   if (counter == 0) then    
      counter = 50000        
      serial_hw3_data = "."  
   end if

end loop

