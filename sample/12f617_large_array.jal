-- Title: Test program for Large Array 
-- Author: Rob Jansen, copyright (c) 2019..2020, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.5r4
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This is an example large array for creating an array that
--              take up more than 80 bytes memory. 
--
-- Sources:
--
-- Notes: Uses the latest version of the large array library.
--        See large_array_1.jal on how to use the library
--
-- Important: There is no range check on the index in the array.
--

include 12f617                 

; Use internal clock and internal reset.
pragma target OSC      INTOSC_NOCLKOUT -- Internal Clock
pragma target PWRTE    enabled         -- Power up timer
pragma target MCLR     internal        -- Reset internal
pragma target WDT      disabled        -- No watchdog
pragma target BROWNOUT enabled         -- Enable in case voltage becomes too low
pragma target IOSCFS   F4MHZ           -- Set internal oscillator to 4 MHz
pragma target clock    4_000_000       -- oscillator frequency 4 MHz

-- Setup the large array
const LARGE_ARRAY_1_SIZE = 90          -- choose number of array variables
const LARGE_ARRAY_1_VARIABLE_SIZE = 1  -- choose size of variables (byte*1)
include large_array_1                  -- include the array library
alias test is large_array_1            -- rename/alias the array to test

var byte result

-- store some values
test[50] = 0x11
test[51] = 0x22
test[26] = 0x33
test[27] = 0x44                        
test[00] = 0x55                       -- This is the first byte of the array.
test[57] = 0x66
test[49] = 0x77
test[LARGE_ARRAY_1_SIZE - 1] = 0x88   -- This is the last byte of the array.

-- read some values
result = test[00]
result = test[50]
result = test[51]
result = test[26]
result = test[27]
result = test[56]
result = test[57]
result = test[49]
result = test[LARGE_ARRAY_1_SIZE - 1]


