-- ----------------------------------------------------------------------------
-- Title: Test program for sicr remote control library.
--  
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: 
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
-- 
-- Sources:
-- 
-- Notes: 
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f723_af.jal
--    * test : test_sirc.jal
--

;@jallib section chipdef

-- device include
include 16f723

-- Internal osc, running at 16 MHz
pragma target clock 16_000_000


-- fuses
pragma target OSC INTOSC_NOCLKOUT
pragma target WDT DISABLED
pragma target PWRTE DISABLED
pragma target MCLR INTERNAL
pragma target CP DISABLED
pragma target BROWNOUT DISABLED
pragma target VOLTAGE V19
pragma target PLLEN ENABLED
pragma target VCAPEN pin_A0
enable_digital_io()                -- make all pins digital I/O

-- generic setup (see releated examples for more details)  
;@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()
include print
include delay

-- sicr setup
const sirc_transmitter = true    ; we want to transmit sirc codes  
var bit sirc_pulse_out is pin_B0 ; define output (IR LED) pin
pin_B0_direction = output        ; set pin to output       
sirc_pulse_out = low

const sirc_receiver    = true    ; we want to receive sirc codes
var bit sirc_pulse_in is pin_B1  ; define input (IR receiver) pin
pin_B1_direction = input         ; set pin to input (should be default)


include sirc

;i2c_initialize()


-- we're alive
const byte str1[] = "Test.\r\n" 
print_string(serial_hw_data, str1)


forever loop
   
   serial_hw_data = "*"   
   print_crlf(serial_hw_data)
   
   delay_100ms(10)
end loop