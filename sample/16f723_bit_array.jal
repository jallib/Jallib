-- ----------------------------------------------------------------------------
-- Title: Test program for bit_array_1.jal
-- 
-- Author: Matthew Schinkel, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: Joep Suijs
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: This samples shows usage of the bit array library to
--              create a bit array with up to 16383 entries
--  
-- Sources:
-- 
-- notes:
-- uses large_array_1 library when BIT_ARRAY_1_SIZE > 2047
-- 
-- const dword BIT_ARRAY_1_SIZE = 100   -- choose number of array variables
-- include bit_array_1                  -- include the array library
-- alias test is bit_array_1            -- rename/alias the array to test
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f723_af.jal
--    * test : test_bit_array.jal
--


;@jallib section chipdef

-- device include
include 16f723

-- Internal osc, running at 16 MHz
pragma target clock 16_000_000


-- fuses
pragma target OSC INTOSC_NOCLKOUT
pragma target WDT DISABLED
pragma target PWRTE DISABLED
pragma target MCLR INTERNAL
pragma target CP DISABLED
pragma target BROWNOUT DISABLED
pragma target VOLTAGE V19
pragma target PLLEN ENABLED
pragma target VCAPEN pin_A0
;@jallib section serial
const serial_hw_baudrate = 115_200

include serial_hardware
serial_hw_init()

const dword BIT_ARRAY_1_SIZE = 203     -- choose number of array variables
include bit_array_1                    -- include the array library
alias test is bit_array_1              -- rename/alias the array to test

;example write bit
test[200] = 1
test[201] = 0
test[202] = 1

;example read bit
var bit x,y,z
x = test[200]
y = test[201]
z = test[202]

-- send these three bits via serial port 10 times
for 10 loop
   serial_hw_data = x
   serial_hw_data = y
   serial_hw_data = z
end loop

-- show the array byte that contains these bits
-- location is 200 / 8 = 25
-- non-valued bits will be unpredictable
-- in this sample, output will be byte XXXXX101
for 10 loop
   serial_hw_data = bit_array_1_byte_array[25]
end loop
