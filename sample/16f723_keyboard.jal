-- ----------------------------------------------------------------------------
-- Title: Test program for keyboard
-- 
-- Author: Joep Suijs, Copyright (c) 2008..2014, all rights reserved.
-- 
-- Adapted-by: 
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: Testing keyboard (4x4, 3x4)
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
-- 
-- Sources:
-- 
-- Notes: 
-- setup:   A keyboard 4x3 or 4x4 connected to two half ports
-- 
-- ----------------------------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_16f723_af.jal
--    * test : test_keyboard.jal
--

;@jallib section chipdef

-- device include
include 16f723

-- Internal osc, running at 16 MHz
pragma target clock 16_000_000


-- fuses
pragma target OSC INTOSC_NOCLKOUT
pragma target WDT DISABLED
pragma target PWRTE DISABLED
pragma target MCLR INTERNAL
pragma target CP DISABLED
pragma target BROWNOUT DISABLED
pragma target VOLTAGE V19
pragma target PLLEN ENABLED
pragma target VCAPEN pin_A0

include delay
enable_digital_io()

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

include print

-- keyboard - setup the two half ports
-- (rows and cols can be on separte ports - unlikely setup for dwarf-board)
alias keyscan  is porta_low      -- rows of keyboard     
alias keydrive is portb_low      -- columns of keyboard
alias keydrive_direction is portb_low_direction


include keyboard  -- check this libraray for keyboad schematics

-- -------------------------- PROGRAM START----------------------------
const byte str1[] = " - Test keyboard.jal- bytes\r\n"   -- define a string
print_string(serial_hw_data, str1)                 -- output string

var byte key

forever loop
   key = getkey()
   print_byte_dec(serial_hw_data,  key)        
   
   serial_hw_data = " "

   key = getkey_once()
   print_byte_dec(serial_hw_data,  key)
   
   print_crlf(serial_hw_data)
   delay_100ms(2)
end loop





