-- ------------------------------------------------------
-- Title: debounce test
--  
-- Author: Alun Jones, Copyright (c) 2012..2014, all rights reserved.
-- 
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: Test program for the debounce library.
-- 
-- This file has been generated by jallib.py from:
--    * board: board_18f4620_js.jal
--    * test : test_debounce.jal
--

;@jallib section chipdef
-- chip setup
include 18f4620

pragma target  clock 20_000_000
pragma target  OSC        hs
pragma target  LVP enabled                         -- allow LVP
pragma target  WDT CONTROL                         -- watchdog software controlled

WDTCON_SWDTEN = OFF                                -- disable watchdog
;@jallib section led
-- LED IO definition
alias led             is pin_c5
alias led_direction   is pin_c5_direction
;@jallib section button
-- button IO definition
alias button             is pin_c0
alias button_direction   is pin_c0_direction

enable_digital_io()

include delay
include debounce

led_direction = output
button_direction = input

-- Initialise the debounce state, requiring 100 samples
-- of a stable state before the debouncer will switch 
-- in response.
var word state = debounce_init(100)

forever loop
   -- debounce will return 2 at the point where the button 
   -- has pressed (assuming it's wired to ground) and held stable
   -- for 100 samples. In this case, with a 1000us delay in the loop,
   -- that's after around 0.1 seconds.
   --
   -- You could also use debounce_fast(button, state) here, in which 
   -- case it will switch immediately after the button is pressed, but
   -- will be more sensitive to noise (not an issue where the button is
   -- a switch, but if it's a thresholded analogue signal with noise, this
   -- might not be what you want).
   if (debounce(button, state) == 2) then
	  -- Toggle the LED.
	  led = !led
   end if               

   _usec_delay(1000)
end loop