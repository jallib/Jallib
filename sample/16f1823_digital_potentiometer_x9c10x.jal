-- -----------------------------------------------------------------------------
-- Title: Sample program for the digital potentiometers X9C102-3-4 + X9C503.
--
-- Author: Rob Jansen, Copyright (c) 2020..2020 all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.5r4
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This sample controls digital potentiometer x9c102-3-4 + X9C503  
--                 
-- Sources: Renesas datasheet for X9C102, X9C103, X9C104, X9C503.    
--
-- Notes: 
--

include 16f1823                 

-- This program uses the internal oscillator at 32 MHz.
pragma target clock    32_000_000      -- oscillator frequency
pragma target OSC      INTOSC_NOCLKOUT -- Internal Clock
pragma target PLLEN    ENABLED         -- PLL on to get 32 MHz
pragma target WDT      DISABLED        -- No Watchdog
pragma target PWRTE    ENABLED         -- Power up timer enabled
pragma target BROWNOUT DISABLED        -- No brownout reset
pragma target FCMEN    DISABLED        -- No clock monitoring
pragma target IESO     DISABLED        -- int/ext osc. switch
pragma target LVP      ENABLED         -- Low voltage programming
pragma target MCLR     INTERNAL        -- Reset internal
-- Set the internal clock frequency to 32 MHz.
OSCCON_IRCF   = 0b1110                 -- Set 32 MHz (uses 8 MHz source)
OSCCON_SCS    = 0b00                   -- Clock determined by FOSC (32 MHz)

-- Enable weak pull up for all ports.
WPUA = 0b0011_1111        
WPUC = 0b0011_1111        
OPTION_REG_WPUEN = FALSE  

enable_digital_io()

-- x9c10x pin definition.
alias x9c10x_increment_pin             is pin_A2 ; Pin 11 of DIP 14.   
alias x9c10x_increment_pin_direction   is pin_A2_direction   
alias x9c10x_up_down_pin               is pin_A4 ; Pin 3 of DIP 14.   
alias x9c10x_up_down_pin_direction     is pin_A4_direction
alias x9c10x_chip_select_pin           is pin_A5 ; Pin 2 of DIP 14.   
alias x9c10x_chip_select_pin_direction is pin_A5_direction

-- Include the potentiometer library and intialize which set the wiper to the 
-- minimal position.
include digital_potentiometer_x9c10x
x9c10x_init() 

alias pot_wiper     is x9c10x_wiper
alias pot_increment is x9c10x_increment
alias pot_decrement is x9c10x_decrement
alias pot_store     is x9c10x_store

procedure wait_three_seconds() is
   _usec_delay(3_000_000)
end procedure

forever loop 

   -- Set some fixed values.  
   pot_wiper = X9C10X_MIN_VALUE
   wait_three_seconds()
   pot_wiper = X9C10X_MAX_VALUE / 5
   wait_three_seconds()
   pot_wiper = X9C10X_MAX_VALUE / 4
   wait_three_seconds()
   pot_wiper = X9C10X_MAX_VALUE / 3
   wait_three_seconds()
   pot_wiper = X9C10X_MAX_VALUE / 2
   wait_three_seconds()
   pot_wiper = X9C10X_MAX_VALUE
   wait_three_seconds()

   -- Use increment. Start at the minimal value.
   pot_wiper = X9C10X_MIN_VALUE  
   for X9C10X_MAX_VALUE loop
     pot_increment()
     _usec_delay(100_000)
   end loop
   wait_three_seconds()
   
   -- We are now at maximun, use decrement to go back to the minimum value.
   for X9C10X_MAX_VALUE loop
      pot_decrement()
     _usec_delay(100_000)
   end loop
   wait_three_seconds()
   
   -- Store this wiper value in the device.
   -- pot_store()
   
end loop   
