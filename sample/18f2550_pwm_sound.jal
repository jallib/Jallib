-- Title: Test program for hardware (built-in) PWM. Plays sound
-- Author: Sebastien Lelong, Copyright (c) 2008..2014, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: this sample show how to use PWM with a constant duty cycle and 
-- a variable frequency. It plays a "nice" melody (connect a small piezzo)
-- Frequencies from 0 to 100_000Hz are played. At the beginning, no sound will come
-- the buzzer, because frequency is too low (no valid combination of PR2/T2CON)
-- 
-- This file has been generated by jallib.py from:
--    * board: board_18f2550_js.jal
--    * test : test_pwm_sound.jal
--

;@jallib section chipdef
-- chip setup
include 18f2550

pragma target  clock 20_000_000
pragma target  OSC        hs
pragma target  LVP enabled                   -- allow LVP
pragma target  WDT CONTROL                   -- WDT software controlled

WDTCON_SWDTEN = OFF                          -- disable WDT

;@jallib use ccp

enable_digital_io()

-- Configure PWM
pin_ccp1_direction = output
include pwm_hardware
-- Let's go !!!
pwm1_on()


var dword counter = 0
forever loop
   
   for 100_000 using counter loop
      pwm_set_frequency(counter)
      -- Setting @50% gives max volume
      -- must be re-computed each time the frequency
      -- changes, because it depends on PR2 value
      pwm1_set_dutycycle_percent(50)
   end loop
   
end loop

