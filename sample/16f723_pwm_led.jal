-- Title: Test program for 1 PWM channel, using a LED 
-- Author: Sebastien Lelong, Copyright (c) 2008-2014, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: this sample show how to use PWM in low resolution mode.
-- It progressively light up and down a LED. Sweet...
-- 
-- This file has been generated by jallib.py from:
--    * board: board_16f723_af.jal
--    * test : test_pwm_led.jal
--


;@jallib section chipdef

-- device include
include 16f723

-- Internal osc, running at 16 MHz
pragma target clock 16_000_000


-- fuses
pragma target OSC INTOSC_NOCLKOUT
pragma target WDT DISABLED
pragma target PWRTE DISABLED
pragma target MCLR INTERNAL
pragma target CP DISABLED
pragma target BROWNOUT DISABLED
pragma target VOLTAGE V19
pragma target PLLEN ENABLED
pragma target VCAPEN pin_A0
;@jallib section ccp
-- no specific settins yet, section required though to generate samples
enable_digital_io()

-- Configure PWM
pin_ccp1_direction = output
include pwm_hardware
pwm_max_resolution(1)
pwm1_on()

forever loop
   var byte i
   i = 0
   -- loop up and down, to produce different duty cycle
   while i < 100 loop
      pwm1_set_dutycycle_percent(i)
      _usec_delay(10000)
      i = i + 1
   end loop
   while i > 0 loop
      pwm1_set_dutycycle_percent(i)
      _usec_delay(10000)
      i = i - 1
   end loop
   -- turning off, the LED lights at max.
   _usec_delay(500000)
   pwm1_off()
   _usec_delay(500000)
   pwm1_on()
   
end loop
