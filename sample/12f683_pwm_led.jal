-- Title: Test program for 1 PWM channel, using a LED 
-- Author: Sebastien Lelong, Copyright (c) 2008-2014, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.4q2
-- 
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: this sample show how to use PWM in low resolution mode.
-- It progressively light up and down a LED. Sweet...
-- 
-- This file has been generated by jallib.py from:
--    * board: board_12f683_rh.jal
--    * test : test_pwm_led.jal
--


;@jallib section chipdef
-- chip setup
include 12f683

-- This program uses the Internal oscillator at 16 MHz
pragma target clock  8_000_000     -- oscillator frequency

pragma target OSC      INTOSC_NOCLKOUT  -- internal oscillator
pragma target WDT      DISABLED     -- watchdog
pragma target MCLR     EXTERNAL     -- reset externally
pragma target BROWNOUT DISABLED     -- no brownout
pragma target IESO     DISABLED     -- no osc switchover

OSCCON_IRCF = 0b111                 -- 8 MHz



;@jallib use ccp

enable_digital_io()

-- Configure PWM
pin_ccp1_direction = output
include pwm_hardware
pwm_max_resolution(1)
pwm1_on()

forever loop
   var byte i
   i = 0
   -- loop up and down, to produce different duty cycle
   while i < 100 loop
      pwm1_set_dutycycle_percent(i)
      _usec_delay(10000)
      i = i + 1
   end loop
   while i > 0 loop
      pwm1_set_dutycycle_percent(i)
      _usec_delay(10000)
      i = i - 1
   end loop
   -- turning off, the LED lights at max.
   _usec_delay(500000)
   pwm1_off()
   _usec_delay(500000)
   pwm1_on()
   
end loop
