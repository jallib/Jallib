<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"topic.dtd">
<topic id="topic-1">
  <title outputclass="page-break-before">Changing the contents of a Jallib
  release</title>

  <prolog>
    <author>Rob Jansen</author>

    <publisher>Jallib Group</publisher>
  </prolog>

  <body>
    <section><title>Introduction</title><p>When changing the contents of a
    Jallib release, the following files must be updated in the root directory
    of <xref format="html" href="https://github.com/jallib/jallib"
    scope="external">Jallib on GitHub</xref>:</p><ul>
        <li>The file <codeph>TORELEASE</codeph> describing which files are
        part of the Jallib release</li>

        <li>The file <codeph>CHANGELOG</codeph> describing the changes of the
        Jallib release</li>
      </ul></section>

    <section><title>Prerequisites</title><p>When adding libraries and/or
    sample files to a Jallib release you must be sure that all files comply
    the <xref href="tutorial_style_guide.xml">Jallib style guide</xref> and
    that all files compile without any warnings and errors. Compliance with
    the style guide can be verified by running the <codeph>jallib3.py</codeph>
    Python script.</p><p>You can check one file using the command
    <codeph>python jallib3.py validate myfile.jal</codeph> or check all your
    files in the same directory using <codeph>*.jal</codeph> as parameter, as
    follows:</p><image href="images/jal_validate.png" otherprops="clickable"
    width="450"/><p>Before you can add any files to Jallib you need to install
    GitHub on your computer or you can use <xref format="html"
    href="https://desktop.github.com/" scope="external">GitHub Desktop</xref>.
    All JAL sample files and libraries must be uploaded to <xref format="html"
    href="https://github.com/jallib/jallib" scope="external">Jallib on
    GitHub</xref>. There you find a directory structure. In most cases the
    following directories are used:</p><ul>
        <li><codeph>sample</codeph> for your sample files</li>

        <li><codeph>include</codeph> for your library files. There are sub
        directories in this directory. See if your library fits in one of the
        existing sub directories. If not, create a new sub directory for your
        library files.</li>
      </ul><note type="important">Before making any changes to GitHub make
    sure that you have fetched the latest Jallib files from
    GitHub.</note></section>

    <section><title>Updating the file TORELEASE</title><p>Not all files that
    are on GitHub are part of a Jallib release. In order to add your files to
    the upcoming Jallib release you have to add all uploaded files from the
    previous section to the <codeph>TORELEASE</codeph> file. This is a text
    file in which you have to add your new files using the correct file
    location used on GitHub. Make sure to add the files in alphabetic
    order.</p><p>You can, or course, also remove files from the Jallib release
    but that will not happen very often.</p></section>

    <section><title>Updating the file CHANGELOG</title><p>This text file
    describes the changes of each Jallib release. Changes can, for example, be
    new libraries, new sample files, new device files or changes to existing
    files like bug fixes or additions.</p></section>

    <section><title>Creating a new Jallib build</title><p>After having added
    all your sample files, library files and updated the files
    <codeph>TORELEASE</codeph> and <codeph>CHANGELOG</codeph> you can commit
    your changes to GitHub. After your commit, a build will automatically be
    started on the Jallib server where all sample files in the TORELEASE
    folder are validated and compiled. The result of the build is sent to the
    <xref href="https://groups.google.com/g/jallib" scope="external">Jallib
    Google Group</xref><fn>Make sure you are a member of the Jallib Google
    Group and the Jallist Google Group.</fn>. When an error occurs in making a
    new build you have to fix the error as soon as possible and upload your
    fixes.</p><p>If all goes well you did a great job and you made the next
    Jallib release richer!</p><note type="notice">Not every commit to GitHub
    results in a new release. Instead a bee-package of the latest build is
    created every week. This bee-package can be downloaded from the JAL
    website and can be used for testing and/or for using the latest JAL
    libraries. About once every year an official Jallib release is
    created</note></section>
  </body>
</topic>
