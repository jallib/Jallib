<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"topic.dtd">
<topic id="template_id">
  <title>Getting Started</title>

  <prolog>
    <author>Matthew Schinkel</author>

    <publisher>Jallib Group</publisher>
  </prolog>

  <body>
    <p id="firstcontent">Guide to getting started with PIC microcontrollers
    JALv2 &amp; Jallib</p>

    <section><p><b>So, you’ve heard all the hype about PIC microcontrollers
    &amp; JALv2 and want to hear more?</b></p> <image
    href="images/getting_started_circuit.jpg"
    otherprops="clickable"/></section>

    <section><title>Why use PIC microcontrollers, JALv2, and this
    book?</title><p><b>Simple usage:</b></p><p>Yes, that’s right,
    microcontrollers are simple to use with the help of this open source
    language JAL. Not only are microcontrollers simple to use, but many other
    complex external hardware is made easy such as: USB, Analog to digital
    conversion (ADC), serial communication, Hard Disks, SD Cards, LCD
    displays, sensors and many more.</p><p>All you will need is a small amount
    of knowledge about general electronics. We will teach you the rest you
    need to know! </p><p>If you already know about how to setup and use
    microcontrollers, I suggest you start with the <xref
    href="tutorial_blink_a_led.xml">"Blink a led"</xref> tutorial, then read
    the "Jallib Starters Guide". The starters guide will give you more
    detailed information about the language JalV2 and Jallib. It also has some
    more advanced technical information and examples. It can be download from:
    <xref format="html" href="http://justanotherlanguage.org/downloads"
    scope="external">http://justanotherlanguage.org/downloads</xref></p><p><b>Circuit
    Simplicity:</b></p><p>Would you like to reduce the size of your circuits?
    What are you currently using to build your digital circuits?</p><p>When I
    got started, I liked to use things like the 74LS series, simple CMOS gate
    chips, 555 timers etc. You can build just about anything with these simple
    chips, but how many will you need to complete your project? One of the
    projects I built some time ago used five 74ls chips. With a
    microcontroller, I can now reduce my circuit to 1
    microcontroller.</p><p><b>Bigger Projects:</b></p><p>When I say bigger, I
    mean cooler projects! There is no limit to what you can build! Choose from
    our small projects to build a large project of your own. What
    functionality do you need for your project? Check out our tutorial section
    for a complete list of compatible features you can use for your circuit.
    </p></section>

    <section><title>What do I need to get started?</title><p>You will need the
    following:</p><p><ol>
        <li>PIC microcontroller chip</li>

        <li>PIC programmer</li>

        <li>Programming language (JALv2) + Libraries (JALLIB) + Editor, see
        our installation guide.</li>

        <li>Computer (preferably one with a serial port)</li>

        <li>PIC programming / burning software</li>

        <li>Regular electronic stuff such as breadboard, resistors, wire,
        multimeter etc.</li>

        <li>Oscilloscope is not required but suggested for some advanced
        projects.</li>
      </ol></p><p>Follow our Installation Guide for free programming language,
    libraries &amp; text editor</p></section>

    <section><title>How much will it cost?</title><p>Yes, getting started with
    microcontrollers has it’s price. A microcontroller can cost you anywhere
    between $1 to $10 USD, and a programmer will cost $20 to $50. But you
    can't put a price on FUN!</p><p>The programming language JALv2 is FREE,
    other languages will cost you somewhere between $200 and $2000.</p><p>When
    you compare this price to the price you are currently spending on those
    many IC’s you currently require to build your circuits, this may be
    cheaper. You will not need many of your smaller IC’s, and some specialty
    chips can be replaced. Of course you're going to save time and breadboard
    space as well!</p><p>As an example... Instead of buying a UART chip for
    serial communication, you can now use the microcontroller’s internal UART
    for communication to your PC or other projects.</p></section>

    <section><title>What PIC microcontroller should I buy?</title> <p><image
    href="images/getting_started_16F877.jpg" otherprops="clickable"
    width="200"/><image href="images/getting_started_16f877_diagram.jpg"
    otherprops="clickable" width="150"/></p> <p>PIC16F877 or PIC16F877A seem
    to be the most popular mid-range PIC at the moment (in the image above).
    You should be able to find them at your local electronics store for around
    $10. This microcontroller has many features and a good amount of memory.
    It will be sufficient for most of your projects. We will build our first
    project on this chip. I warn you however, you may eventually want to move
    to an 18F PIC for more memory, for example, you can run a SD Card, but you
    cannot use FAT32. I only suggest 16f877A because it will be easy to find
    at a store.</p><p>There are many low-end PIC’s to choose from, PIC16F84,
    PIC16F88 are smaller chips for around $5. There are also very low end 8
    pin PIC’s such as 12F675 for $1.</p><p>If you're looking for speed,
    functionality, and a whole lot of memory space, you can go with a
    PIC18Fxxx chip. I suggest one of the following: 18f452, 18F4620, 18F4550.
    These PIC’s will also work in our getting started “blink a led” tutorial
    with the same circuit diagram. If you can, get a 18F PIC. My current
    favorite is the 40 pin 18f4620. </p><p>You will notice that the better 18F
    series chips are actually cheaper then the outdated 16F chips.</p><p>Here
    is a price chart from the manufacturers sales website (prices from July
    2023):</p><table>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>PIC</entry>

              <entry>Price USD</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>12F675</entry>

              <entry>$1.74</entry>
            </row>

            <row>
              <entry>16F84</entry>

              <entry>$746</entry>
            </row>

            <row>
              <entry>16F877</entry>

              <entry>$8.33</entry>
            </row>

            <row>
              <entry>16F877A</entry>

              <entry>$7.62</entry>
            </row>

            <row>
              <entry>16F1455</entry>

              <entry>$2.44</entry>
            </row>

            <row>
              <entry>18F452</entry>

              <entry>$7.60</entry>
            </row>

            <row>
              <entry>18F2550</entry>

              <entry>$788</entry>
            </row>

            <row>
              <entry>18F4550</entry>

              <entry>$8.19</entry>
            </row>

            <row>
              <entry>18F4620</entry>

              <entry>$9.56</entry>
            </row>
          </tbody>
        </tgroup>
      </table></section>

    <section><title>What programmer should I buy?</title><p>Any pic programmer
    will do. The only suggestions I have is to make sure it can program a wide
    variety of PIC’s such as the ones listed above, and make sure it has a
    ICSP port for future use. ICSP is for in-circuit programming.</p><p>Here
    are some images of programmers we use:</p><p><image
    href="images/getting_started_serial_programmer.jpg" otherprops="clickable"
    width="265"/><image href="images/getting_started_a-wisp648.jpg"
    otherprops="clickable" width="217"/></p><p><image
    href="images/getting_started_pic_kit2_clone.jpg" otherprops="clickable"
    width="300"/></p></section>

    <section><title>What editor should I use?</title><p>Any text editor is
    fine, but if you are on a windows machine. We suggest the free editor “JAL
    Edit” which will highlight &amp; color important text as well as compile
    your JAL program to a hex file for burning to your microcontroller. If you
    followed our installation guide, you will already have this editor.</p>
    <image href="images/getting_started_jaledit.jpg" otherprops="clickable"
    width="450"/> <p>If you want to use another editor that supports the JAL
    syntax or you are using another operating system than Windows, you can
    make use of <xref href="tutorial_visual_studio_code.xml"> <apiname>Visual
    Studio Code</apiname> </xref> for your JAL development.</p></section>

    <section><title>What programming/burning software should I
    use?</title><p>Did your programmer come with software? There are many to
    choose from so use whatever you prefer. I use “Micropro” from <xref
    format="html" href="http://www.ozitronics.com/micropro.html"
    scope="external"/>. It’s a free, open source software for programming a
    wide range of PIC’s. However, it will most likely not support your
    programmer. I suggest you use the software that came with your programmer.
    You may see this programmer in other tutorials for demonstration only.</p>
    <image href="images/getting_started_micropro.jpg" otherprops="clickable"
    width="450"/> <p>When using a PICkit2 or a PICKit3, you can use the
    standalone PICKit2 or PICKit3 software from Microchip. This software can
    be downloaded from the <xref format="html"
    href="https://www.microchip.com/en-us/tools-resources/archives/mplab-ecosystem"
    scope="external"> <apiname>Microchip archive site</apiname> </xref>
    (scroll down to the bottom of the site) but this software is no longer
    supported. The interface of this standalone software for the PICKit3 looks
    like this.</p><p><image href="images/getting_started_pickit3.png"
    otherprops="clickable" width="450"/></p><p>Luckily there are still people
    who spend effort in supporting newer PICs for this software. In order to
    upgrade your PICKit2 or PICKit3 software so it supports more PICs, you
    have to do the following:<ul>
        <li>Download a new data file named
        <codeph>PKPlusDeviceFile.dat</codeph> that contains the newer PICs
        from <xref format="html" href="https://github.com/Anobium/PICKitPlus"
        scope="external"> <apiname>Anobium on GitHub</apiname> </xref></li>

        <li>Go to the directory on your computer where the PICKit2 of PICKit3
        software is located. You will find a data file with the name
        <codeph>PK2DeviceFile.dat</codeph>. Rename this file or delete it and
        copy the file <codeph>PKPlusDeviceFile.dat</codeph> to this
        directory</li>

        <li>Rename the file <codeph>PKPlusDeviceFile.dat</codeph> to
        <codeph>PK2DeviceFile.dat</codeph>. Now start the PICKit2 or PICKit3
        standalone application</li>
      </ul></p><p>An alternative when using a PICkit2, a PICKit3, a PICKit4 or
    a SNAP programmer from Microchip, is to use the Integrated Programming
    Environment (IPE) from Microchip. This environment is part of <xref
    format="html"
    href="https://www.microchip.com/en-us/tools-resources/develop/mplab-x-ide"
    scope="external"> <apiname>MPLABX</apiname> </xref> and can be downloaded
    for free. Note that not all programmers are capable of programming all
    PICs except for the PICKit4. The PICKit2 and PICKit3 cannot program all
    newer PICs - but the dat file update mentioned previously will help to
    support more PICs - and the SNAP cannot program all older PICs since the
    SNAP programmer only supports Low Voltage Programming (LVP). All these
    programmers make use of the <xref href="tutorial_ICSP.xml"> <apiname>In
    Circuit Programming</apiname> </xref> feature of the PIC. The following
    image shows a screenshot of the IPE environment where two programmers are
    connected to the computer, a PICKit3 and a SNAP.</p><p><image
    href="images/getting_started_mplabx_ipe.png" otherprops="clickable"
    placement="inline" width="450"/></p></section>

    <section><p>OK, enough of this boring stuff, lets build something! Start
    with the <xref href="tutorial_blink_a_led.xml">Blink A Led
    Tutorial</xref>.</p></section>
  </body>
</topic>
