<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" []>
<topic id="template_id">
  <title>In Circuit Programming</title>
  <prolog>
    <author>Matthew Schinkel</author>
    <publisher>Jallib Group</publisher>
    <metadata>
      <category/>
      <prodinfo>
        <prodname>Jallib</prodname>
        <vrmlist>
          <vrm version="0.0"/>
        </vrmlist>
      </prodinfo>
    </metadata>
  </prolog>
  <body>
    <p id="firstcontent">Intro to in-circuit programming &amp; ICSP</p>
    <section>
      <title>What is ICSP?</title>
      <p>ICSP stands for In-Circuit Serial Programming. More information can be found at <xref href="http://ww1.microchip.com/downloads/en/DeviceDoc/30277d.pdf" format="html">http://ww1.microchip.com/downloads/en/DeviceDoc/30277d.pdf</xref></p>
    </section>
    <section>
      <title>Benefits of ICSP</title>
      <p><ol>
          <li>You may program your PIC while it is in your breadboard circuit</li>
          <li>You may program your PIC while it is on a soldered circuit board</li>
          <li>You will save time programming so you can write more code faster</li>
          <li>You can reset your circuit from your PC</li>
          <li>You can program surface mount PIC&apos;s that are on soldered circuit board</li>
          <li>You won&apos;t bend or break any pins</li>
          <li>You won&apos;t damage your PIC by placing it in your breadboard wrong</li>
          <li>With a remote desktop software like VNC, you can program your PIC from anywhere around the world. </li>
          <li>I can program my PIC in my living room on my laptop while I watch tv with my wife! (I keep my mess in my office)</li>
        </ol></p>
    </section>
    <section>
      <title>Intro to ICSP &amp; in-circuit programming</title>
      <p>When I got started in micro-controllers and JAL, I needed to choose a programmer. At the time, I did not know anything about choosing a programmer, so I just went on ebay and bought one that is able to program many different PIC&apos;s.</p>
      <p>For years, I used this programmer by putting my 16f877 chip into it, programming it, and putting it into my circuit. I broke pins and wasted a lot of time. Little did I know, my programmer has an ICSP output for in-circuit programming. My programmer even says ICSP on it, but I did not know what ICSP is.</p>
      <p>Eventually I got sick and tired of moving my micro-controller back and forth from the breadboard to the programmer, and I had herd some talk about ICSP. I found a ICSP circuit on the net, and I took a harder look at my programmer, it has 6 pins sticking up labeled ICSP. However, I did not know what pin was what, they where not marked well, and I could not find info about my programmer. One of the pins was marked pin 1 on the programmer. If you know your ICSP pinouts already, you may skip to the circuit diagram.</p>
      <p>I searched for 6-pin ICSP in Google and found that pinouts are different depending on the programmer. So, I took out my volt-meter and logic probe (and oscilloscope, although it is not needed) and measured the voltages off each pin while programming a chip and while not. I could see on the PCB that pin 3 is connected to ground and pin 6 is connected to nothing. Here&apos;s what I got:</p>
      <p><table frame="all">
          <tgroup cols="3">
            <thead>
              <row>
                <entry>PIN #</entry>
                <entry>While Idle</entry>
                <entry>While Programming</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>1</entry>
                <entry>0v</entry>
                <entry>12v</entry>
              </row>
              <row>
                <entry>2</entry>
                <entry>0v</entry>
                <entry>5v</entry>
              </row>
              <row>
                <entry>3</entry>
                <entry>0v</entry>
                <entry>0v</entry>
              </row>
              <row>
                <entry>4</entry>
                <entry>5v</entry>
                <entry>Pulsing 0v to 5v (random)</entry>
              </row>
              <row>
                <entry>5</entry>
                <entry>0v</entry>
                <entry>Pulsing 0v to 5v (square wave)</entry>
              </row>
              <row>
                <entry>6</entry>
                <entry>not connected</entry>
                <entry>0v - can see no connection on PCB</entry>
              </row>
            </tbody>
          </tgroup>
        </table></p>
    </section>
    <section>
      <title>Get the pin names</title>
      <p>The pin names for ICSP are VPP1, LOW, DATA, CLK, VCC, GND. So lets match them up:</p>
      <p>0v pin 6 must be pin “AUX”, I think this one is actually not connected</p>
      <p>0v pin 3 must be pin “GND”</p>
      <p>pin 1 is a programming enable pin, VPP1</p>
      <p>pin 2 is 5v, mostly used to power a not powered circuit during programming.</p>
      <p>pin 4/5 are pulsing pins. They must be “CLK” and “DATA” (you may have to guess which is which if you don&apos;t ave a oscilloscope.</p>
      <p>Lets make a new chart. I believe most ICSP ports have pins in this order:</p>
      <table frame="all">
        <tgroup cols="4">
          <thead>
            <row>
              <entry>PIN #</entry>
              <entry>PIN NAME</entry>
              <entry>While idle</entry>
              <entry>While Programming</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>1</entry>
              <entry>VPP1</entry>
              <entry>0v</entry>
              <entry>12v</entry>
            </row>
            <row>
              <entry>2</entry>
              <entry>VDD</entry>
              <entry>0v</entry>
              <entry>5v</entry>
            </row>
            <row>
              <entry>3</entry>
              <entry>GND</entry>
              <entry>0v</entry>
              <entry>0v</entry>
            </row>
            <row>
              <entry>4</entry>
              <entry>DATA</entry>
              <entry>5v</entry>
              <entry>Pulsing 0v to 5v (random)</entry>
            </row>
            <row>
              <entry>5</entry>
              <entry>CLK</entry>
              <entry>0v</entry>
              <entry>Pulsing 0v to 5v (square wave)</entry>
            </row>
            <row>
              <entry>6</entry>
              <entry>AUX</entry>
              <entry>not connected</entry>
              <entry>not connected</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section>
      <title>Build a circuit with ICSP</title>
      <p>VDD can be connected to your PIC’s 5v supply (as seen in the schematic below), but many programmers do not need this pin. If you do not need it you can disconnect it. I feel that it is more safe to disconnect it if you are not going to use it.  You can test disconnecting this wire after you get ICSP working. </p>
      <p>VDD is for power-off programming. Power-off programming does not work in my circuit because there is too much current drain. In my projects, I do use the VCC pin, and I will program my chips while my circuit power supply is ON.</p>
      <p>GND must be connected to your circuits ground. Follow this circuit diagram:</p>
      <image href="images/icsp_circuit.jpg" width="450" otherprops="clickable"/>
      <p>Your done! Turn on your power supply and try to program your chip!</p>
    </section>
  </body>
</topic>
