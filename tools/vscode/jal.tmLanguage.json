{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Just Another Language (JAL)",
  "foldingStartMarker": "(?i)^\\s*(begin|if|forever loop|procedure|function|block)\\b",
  "foldingStopMarker": "(?i)^\\s*(end)\\b",
  "keyEquivalent": "^~S",

  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#support"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.control.jal",
          "match": ";.*$|--.*$"
        }
      ]
    },
    "support": {
      "patterns": [
        {
          "name": "support.type.jal",
          "match": "\\b(?<!\\.)(?i:(bit|byte|dword|float|record|sbit|sbyte|sdword|sword|volatile|word))\\b"
        }
      ]
    },

    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.jal",
          "match": "\\b(?<!\\.)(?i:(alias|asm|assembler|assert|at|bank|block|case|const|count|defined|else|elsif|end|exit|for|forever|function|if|in|is|keep|local|loop|of|out|page|procedure|protection|repeat|return|shared|start|suspend|task|then|using|until|var|whereis|while))\\b"
        },
        {
          "match": "(\\=|\\>|\\<|\\!|\\?|\\+|\\-|\\*|\\/|\\&|\\^|\\%|\\=)",
          "name": "keyword.operator.jal"
        },
        {
          "name": "keyword.control.other.jal",
          "match": "\\b(?<!\\.)(?i:('get|'put|_debug|_error|_usec_delay|_warn|pragma|target|include))"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.jal",
          "match": "\\b(?<!\\.)(?i:(TRUE|FALSE|HIGH|LOW|ON|OFF|INPUT|OUTPUT|ALL_INPUT|ALL_OUTPUT))\\b"
        },
        {
          "match": "(\\b(0x([0-9a_-fA-F_])*\\b)|\\b(0b[0-1]*)\\b|\\b(([0-9_]+\\.?[0-9_]*)|(\\.[0-9_]+))\\b)",
          "name": "constant.numeric.jal"
        },
        {
          "name": "constant.language.other.jal",
          "match": "\\b(?<!\\.)(?i:(PPS_0|PPS_1|PPS_2|PPS_3|PPS_4|PPS_5))\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.jal",
      "begin": "\"|'",
      "end": "\"|'",
      "patterns": [
        {
          "name": "constant.character.escape.jal",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.jal"
}
