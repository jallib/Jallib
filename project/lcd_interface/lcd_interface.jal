-- -----------------------------------------------------------------------------
-- Title: LCD interface - interfaces to an HD44780 compatible LCDs
-- Author: Joep Suijs, Copyright (c) 2008..2009, all rights reserved.
-- Adapted-by: Albert Faber
-- Compiler:  >=2.4l
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Sources:
--
-- Description:
--    This is an application that provides alternative interfaces to an HD44780 
--    compatible LCD. Unlike other interfaces (like 'LCD Serial Backpack' and K107),
--    this app is not aware of the HD44780 command set. 
--    The corresponding jallib libraries are given transparent access to the LCD in
--    4-bit mode so all current and future jallib HD44780 functionality is supported. 
--    In addition to this, variable backlight control is supported.
-- 
--    Currently, only serial comms is supported (57600,8,1)
--    todo:
--       - i2c slave interface
-- -----------------------------------------------------------------------------

;include board_16f88_sl
;@jallib use chipdef
;@jallib use lcd_hd44780_4
;@jallib use serial       
;@jallib use ccp

-- -----------------------------------------------------------------------------
-- copy of relevant part of board file for designed PCB
-- -----------------------------------------------------------------------------

-- chip setup
include 16f88

-- We'll use internal oscillator. It work @ 8MHz
pragma target clock		8_000_000
pragma target OSC		INTOSC_NOCLKOUT
OSCCON_IRCF = 0b_111                   -- Specify no postscaler, ie. really runs @8MHz

pragma target WDT		   disabled       -- no watchdog
pragma target LVP		   disabled       -- no low-voltage programming
pragma target CCP1MUX	   RB0         -- ccp1 pin on B0
pragma        bootloader   long_start  -- for TinyBootloader

const serial_hw_baudrate = 57_600

-- LCD IO definition
alias lcd_rs                 is pin_a6              -- LCD command/data select.
alias lcd_rs_direction       is pin_a6_direction
alias lcd_en                 is pin_a7              -- LCD data trigger
alias lcd_en_direction       is pin_a7_direction
alias lcd_dataport           is porta_low           -- LCD data  port
alias lcd_dataport_direction is porta_low_direction
const byte LCD_ROWS     = 4                         -- 4 lines
const byte LCD_CHARS    = 20                        -- 20 chars per line      

-- ccp setup
alias pin_ccp1_direction is pin_b0_direction

-- -----------------------------------------------------------------------------
-- Board file end
-- -----------------------------------------------------------------------------

enable_digital_io()

; lcd setup
lcd_rs_direction        = output
lcd_en_direction        = output
lcd_dataport_direction  = output
include lcd_hd44780_4

; serial port setup
include serial_hardware
serial_hw_init()
            
; pwm setup (for backlight)
include pwm_hardware
pin_ccp1_direction = output
pwm_max_resolution(1)
pwm1_on()                
pwm1_set_dutycycle(0)   -- backlight off

-- define input byte & bitfiels for serial comms
var volatile byte inchar
var volatile bit   cmdfield         at inchar : 5
var volatile bit*5 datafield        at inchar : 0

forever loop
   
   if (serial_hw_read(inchar) == true) then
      if (cmdfield == 0) then
         -- write to display
         lcd_rs = ((inchar & 0x10) != 0)    -- set rs if bit5 is set.
         __lcd_write_nibble(datafield)
      elsif (cmdfield == 1) then
         -- 5 bit pwm value in datafield
          pwm1_set_dutycycle((datafield * 8) + (datafield / 4))
      end if
   end if   
   
end loop
