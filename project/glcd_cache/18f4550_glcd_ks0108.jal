-- Title: Test program shows Conway's 'game of life' on a ks0108 graphic LCD
-- Author: Joep Suijs, Copyright (c) 2008-2009, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.4m
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: 
-- http://en.wikipedia.org/wiki/Conway's_Game_of_Life
--
-- This file has been generated from:
--    * board: board_18f4550_af.jal
--    * test : test_glcd_ks0108.jal
--

;@jallib section chipdef
-- chip setup
include 18f4550

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV        P5          -- divide by 5 - 20MHZ_INPUT
pragma target CPUDIV        P2          -- OSC1_OSC2_SRC_1_96MHZ_PLL_SRC_2
pragma target USBPLL        F48MHZ      -- CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC           HS_PLL
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       MINIMUM     -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           DISABLED    -- no watchdog
pragma target CCP2MUX       ENABLED     -- CCP2 pin C1
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          EXTERNAL    -- master reset on RE3
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           DISABLED    -- no low-voltage programming
pragma target XINST         ENABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CP2           DISABLED    -- code block 2 not protected
pragma target CP3           DISABLED    -- code block 3 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target CPD           DISABLED    -- eeprom code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRT2          DISABLED    -- table write block 2 not protected
pragma target WRT3          DISABLED    -- table write block 3 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTD          DISABLED    -- eeprom not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTR2         DISABLED    -- table read block 2 not protected
pragma target EBTR3         DISABLED    -- table read block 3 not protected
pragma target EBTRB         DISABLED    -- boot block not protected




;@jallib section glcd
-- GRAPHIC_LCD IO definition
var volatile byte GLCD_DATAPRT     is portd
var volatile byte GLCD_DATAPRT_DIR is portd_direction

var volatile bit GLCD_RW  is pin_b4
var volatile bit GLCD_CS1 is pin_b0
var volatile bit GLCD_E   is pin_b5
var volatile bit GLCD_DI  is pin_b2
var volatile bit GLCD_RST is pin_c0
var volatile bit GLCD_CS2 is pin_b1

var volatile bit GLCD_RW_DIRECTION  is pin_b4_direction
var volatile bit GLCD_CS1_DIRECTION is pin_b0_direction
var volatile bit GLCD_E_DIRECTION   is pin_b5_direction
var volatile bit GLCD_DI_DIRECTION  is pin_b2_direction
var volatile bit GLCD_RST_DIRECTION is pin_c0_direction
var volatile bit GLCD_CS2_DIRECTION is pin_b1_direction

;@jallib section led
-- LED IO definition
alias led is pin_b3
alias led_direction is pin_b3_direction
alias led2 is pin_b1
alias led2_direction is pin_b1_direction
led_direction = output

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

include print
include random

include delay     

-- include font libraries and specify which one to use
const byte FONT_AUTO_WRAP = TRUE -- auto wrap text at end of screen
include glcd_5x7_font
-- include glcd_6x8_font
include glcd_font
glcd_font_use(FONT_5X7)

include glcd_ks0108      
include glcd_common
glcd_init()

const byte str1[] = "Test graph display.      "      -- define a string
print_string(serial_hw_data, str1)                 -- output string

;lcd_box  ( 0,0, 127,63)  
     
include print




glcd_char_y_pos  = 20;  
glcd_char_x_pos = 20

;lcd_line(0, 0, 32, 63)
;lcd_line(0, 0, 64, 63)
;lcd_line(0, 0, 127,63)    

print_string(lcd, str1)
lcd_box  ( 0,0, 127,63)  

delay_100ms(10)


forever loop

   delay_100ms(5)

   -- fill with chars    
   var byte x, y, char;
   char = 32 
   for 8 using y loop 
      for 25 using x loop
         lcd_setcursor(y, x)
         lcd = char
         char = char + 1
         if (char > 122) then char = 32 end if   
      end loop
   end loop 

   serial_hw_data = "+"

end loop
